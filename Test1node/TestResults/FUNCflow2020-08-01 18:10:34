Last login: Sat Aug  1 22:10:30 2020 from 174.114.234.237
cell oneNodeDemo; cd ~/OnosSystemTest/TestON/bin/; ./cli.py run FUNCflow

exit

ubuntu@manage:~$ cell oneNodeDemo; cd ~/OnosSystemTest/TestON/bin/; ./cli.py run  FUNCflow
[01;31m[KONOS_CELL[m[K=oneNodeDemo
OCC1=192.168.171.28
OC1=192.168.171.28
OCI=192.168.171.28
OCN=192.168.171.17
ONOS_APPS=gui,drivers,openflow,proxyarp
ONOS_GROUP=sdn
ONOS_MN_PY=/home/ubuntu/onos/tools/dev/mininet/onos.py
ONOS_SCENARIOS=/home/ubuntu/onos/tools/test/scenarios
ONOS_USER=sdn
ONOS_WEB_PASS=rocks
ONOS_WEB_USER=onos

                                +----------------+
------------------------------ { Script And Files }  ------------------------------
                                +----------------+

	Script Log File : /home/ubuntu/OnosSystemTest/TestON/logs/FUNCflow_01_Aug_2020_22_10_35/FUNCflow_01_Aug_2020_22_10_35.log
	Report Log File : /home/ubuntu/OnosSystemTest/TestON/logs/FUNCflow_01_Aug_2020_22_10_35/FUNCflow_01_Aug_2020_22_10_35.rpt
	Scapy Session Log : /home/ubuntu/OnosSystemTest/TestON/logs/FUNCflow_01_Aug_2020_22_10_35/Scapy.session
	Mininet1 Session Log : /home/ubuntu/OnosSystemTest/TestON/logs/FUNCflow_01_Aug_2020_22_10_35/Mininet1.session
	ONOScell Session Log : /home/ubuntu/OnosSystemTest/TestON/logs/FUNCflow_01_Aug_2020_22_10_35/ONOScell.session
	Test Script : /home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/FUNCflow.py
	Test Params : /home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/FUNCflow.params
	Topology : /home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/FUNCflow.topo
                              +------------------+
---------------------------  { Script Exec Params }  ---------------------------
                              +------------------+

{
    "CTRL": {
        "port": "6653"
    }, 
    "DEBUG": "on", 
    "DEPENDENCY": {
        "path": "/tests/FUNC/FUNCflow/dependencies/", 
        "topology": "topo-flow.py", 
        "wrapper1": "startUp", 
        "wrapper2": "topo"
    }, 
    "ENV": {
        "cellApps": "drivers,openflow", 
        "cellName": "productionCell"
    }, 
    "GIT": {
        "branch": "master", 
        "pull": "False"
    }, 
    "GRAPH": {
        "builds": "20", 
        "nodeCluster": "VM"
    }, 
    "SCALE": {
        "max": "1"
    }, 
    "SCAPY": {
        "HOSTNAMES": "h1,h2,h3,h4,h5,h6"
    }, 
    "SLEEP": {
        "addFlow": "10", 
        "delFlow": "10", 
        "startMN": "5", 
        "startup": "15"
    }, 
    "TEST": {
        "arpType": "2054", 
        "icmp6Proto": "58", 
        "icmpProto": "1", 
        "ip4Type": "2048", 
        "ip6Type": "34525", 
        "mpls": "22", 
        "mplsType": "34887", 
        "sctpDst": "40001", 
        "sctpProto": "132", 
        "swDPID": "of:0000000000000001", 
        "tcpDst": "40001", 
        "tcpProto": "6", 
        "udpDst": "40051", 
        "udpProto": "17", 
        "vlan": "10", 
        "vlanType": "33024"
    }, 
    "testcases": "1,2,10,11,1000,3000,1100,3000,1200,3000,1300,3000,1400,3000,1500,3000,1600,3000,1700,3000,1800,3000,1900,3000,2000,12,100"
}

                               +---------------+
----------------------------- { Components Used }  -----------------------------
                               +---------------+
	Scapy
	Mininet1
	ONOScell


                              +--------+
---------------------------- { Topology }  ----------------------------
                              +--------+

[
    [
        "ONOScell", 
        {
            "connect_order": "1", 
            "host": "localhost", 
            "user": "sdn", 
            "COMPONENTS": {
                "web_user": null, 
                "diff_clihost": null, 
                "web_pass": null, 
                "prompt": null, 
                "cluster_name": null, 
                "onos_home": null, 
                "nodes": "1", 
                "karaf_password": null, 
                "karaf_username": null, 
                "rest_port": null
            }, 
            "home": null, 
            "password": "rocks", 
            "type": "OnosClusterDriver"
        }
    ], 
    [
        "Mininet1", 
        {
            "connect_order": "2", 
            "host": "OCN", 
            "user": "sdn", 
            "COMPONENTS": {
                "prompt": null
            }, 
            "password": "rocks", 
            "type": "MininetCliDriver"
        }
    ], 
    [
        "Scapy", 
        {
            "connect_order": "3", 
            "host": "OCN", 
            "user": "sdn", 
            "COMPONENTS": {
                "prompt": null
            }, 
            "password": "rocks", 
            "type": "MininetScapyCliDriver"
        }
    ]
]
------------------------------------------------------------


******************************
 CASE INIT 
******************************

['ONOScell', 'Mininet1', 'Scapy']
2020-08-01 22:10:35,004 - FUNCflow - INFO - Creating component Handle: ONOScell
2020-08-01 22:10:35,011 - FUNCflow - INFO - ONOScell: Found ['192.168.171.28'] ONOS IPs
2020-08-01 22:10:35,011 - FUNCflow - INFO - ONOScell: Trying to connect to localhost
2020-08-01 22:10:35,047 - FUNCflow - INFO - ssh key confirmation received, send yes
2020-08-01 22:10:35,996 - FUNCflow - INFO - Password not required logged in
[95m2020-08-01 22:10:36,301 - FUNCflow - DEBUG - {'connect_order': '2', 'user': 'sdn', 'COMPONENTS': {'web_user': None, 'diff_clihost': None, 'web_pass': None, 'prompt': None, 'cluster_name': None, 'onos_home': None, 'nodes': '1', 'karaf_password': None, 'karaf_username': None, 'rest_port': None}, 'home': None, 'password': 'rocks', 'type': 'OnosCliDriver', 'host': 'localhost'}[0m
2020-08-01 22:10:36,302 - FUNCflow - INFO - Creating component Handle: ONOScli1
2020-08-01 22:10:36,315 - FUNCflow - INFO - ONOScli1: Trying to connect to localhost
2020-08-01 22:10:37,184 - FUNCflow - INFO - Password not required logged in
[95m2020-08-01 22:10:37,490 - FUNCflow - DEBUG - {'connect_order': '1', 'user': 'sdn', 'COMPONENTS': {'web_user': None, 'diff_clihost': None, 'web_pass': None, 'prompt': None, 'cluster_name': None, 'onos_home': None, 'nodes': '1', 'karaf_password': None, 'karaf_username': None, 'rest_port': None}, 'home': None, 'password': 'rocks', 'type': 'OnosClusterDriver', 'host': 'localhost'}[0m
[95m2020-08-01 22:10:37,490 - FUNCflow - DEBUG - {'connect_order': '2', 'user': 'onos', 'COMPONENTS': {'web_user': None, 'diff_clihost': None, 'web_pass': None, 'prompt': None, 'cluster_name': None, 'onos_home': None, 'nodes': '1', 'karaf_password': None, 'karaf_username': None, 'rest_port': None}, 'home': None, 'password': 'rocks', 'type': 'OnosRestDriver', 'host': '192.168.171.28', 'port': '8181'}[0m
2020-08-01 22:10:37,491 - FUNCflow - INFO - Creating component Handle: ONOSrest1
2020-08-01 22:10:37,550 - FUNCflow - INFO - ONOSrest1: ip set to 192.168.171.28
[95m2020-08-01 22:10:37,550 - FUNCflow - DEBUG - {'connect_order': '2', 'user': 'sdn', 'COMPONENTS': {'web_user': None, 'diff_clihost': None, 'web_pass': None, 'prompt': None, 'cluster_name': None, 'onos_home': None, 'nodes': '1', 'karaf_password': None, 'karaf_username': None, 'rest_port': None}, 'home': None, 'password': 'rocks', 'type': 'OnosDriver', 'host': 'localhost'}[0m
2020-08-01 22:10:37,550 - FUNCflow - INFO - Creating component Handle: ONOSbench1
2020-08-01 22:10:37,559 - FUNCflow - INFO - ONOSbench1: Found ['192.168.171.28'] ONOS IPs
2020-08-01 22:10:37,559 - FUNCflow - INFO - ONOSbench1: Trying to connect to localhost
2020-08-01 22:10:38,458 - FUNCflow - INFO - Password not required logged in
[95m2020-08-01 22:10:38,764 - FUNCflow - DEBUG - {'connect_order': '2', 'user': 'sdn', 'COMPONENTS': {'web_user': None, 'diff_clihost': None, 'web_pass': None, 'prompt': None, 'cluster_name': None, 'onos_home': None, 'nodes': '1', 'karaf_password': None, 'karaf_username': None, 'rest_port': None}, 'home': None, 'password': 'rocks', 'type': 'OnosDriver', 'host': '192.168.171.28'}[0m
2020-08-01 22:10:38,765 - FUNCflow - INFO - Creating component Handle: ONOSserver1
2020-08-01 22:10:38,774 - FUNCflow - INFO - ONOSserver1: Found ['192.168.171.28'] ONOS IPs
2020-08-01 22:10:38,775 - FUNCflow - INFO - ONOSserver1: Trying to connect to 192.168.171.28
2020-08-01 22:10:38,817 - FUNCflow - INFO - ssh key confirmation received, send yes
2020-08-01 22:10:39,671 - FUNCflow - INFO - Password not required logged in
2020-08-01 22:10:39,978 - FUNCflow - INFO - Creating component Handle: Mininet1
2020-08-01 22:10:40,023 - FUNCflow - INFO - ssh key confirmation received, send yes
2020-08-01 22:10:40,807 - FUNCflow - INFO - Password not required logged in
2020-08-01 22:10:41,011 - FUNCflow - INFO - Connection successful to the host sdn@192.168.171.17
2020-08-01 22:10:41,141 - FUNCflow - INFO - Creating component Handle: Scapy
2020-08-01 22:10:41,907 - FUNCflow - INFO - Password not required logged in
2020-08-01 22:10:42,111 - FUNCflow - INFO - Connection successful to the host sdn@192.168.171.17

******************************
 Result summary for Testcase1
******************************

[95m2020-08-01 22:10:42,127 - FUNCflow - DEBUG - Case Executed       : [1][0m
[95m2020-08-01 22:10:42,127 - FUNCflow - DEBUG - Case to be executed : [2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:10:42.128670] [FUNCflow] [CASE]  Constructing test variables and building ONOS package
[2020-08-01 22:10:42.129317] [FUNCflow] [STEP]  1.1: Constructing test variables
2020-08-01 22:10:42,131 - FUNCflow - INFO - Sending: scp /home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/topo-flow.py sdn@192.168.171.17:~/mininet/custom/
2020-08-01 22:10:42,262 - FUNCflow - INFO - ssh key confirmation received, sending yes
2020-08-01 22:10:43,100 - FUNCflow - INFO - Secure copy successful
2020-08-01 22:10:43,104 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:10:43,104 - FUNCflow - INFO - Successfully copy test variables 
2020-08-01 22:10:43,104 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:10:43.104852] [FUNCflow] [CASE]  Pull onos branch and build onos on Teststation.
2020-08-01 22:10:43,105 - FUNCflow - INFO - Skipped git checkout and pull as they are disabled in params file
2020-08-01 22:10:43,106 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:10:43,106 - FUNCflow - INFO - Successfully construct test variables 
2020-08-01 22:10:43,106 - FUNCflow - INFO - Assertion Passed
2020-08-01 22:10:43,106 - FUNCflow - INFO - ONOSbench1 home is ~/onos
ONOSbench1: 

commit 12bfd3d32d808e9590d1d3d70bc0cbd4b320575c (HEAD -> master, origin/master, origin/HEAD)
Author:     Parvathi MH <parvathi.mh@samsung.com>
AuthorDate: Thu Jan 30 10:31:10 2020 +0530
Commit:     Thomas Vachuska <tom@opennetworking.org>
CommitDate: Tue Jul 28 18:17:54 2020 +0000

    Fix to get onos pid in onos-jpenable
sdn@manage:~/onos$

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase2
******************************

[95m2020-08-01 22:10:43,650 - FUNCflow - DEBUG - Case Executed       : [1, 2][0m
[95m2020-08-01 22:10:43,650 - FUNCflow - DEBUG - Case to be executed : [10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:10:43.650920] [FUNCflow] [CASE]  Starting up 1 node(s) ONOS cluster
2020-08-01 22:10:43,651 - FUNCflow - INFO - ONOS cluster size = 1
[95m2020-08-01 22:10:43,651 - FUNCflow - DEBUG - Apps: drivers,openflow[0m
2020-08-01 22:10:43,651 - FUNCflow - INFO - Atomix Cluster Size = 1 
temp                                            0%    0     0.0KB/s   --:-- ETAtemp                                          100%  233   340.1KB/s   00:00    
[2020-08-01 22:10:44.502015] [FUNCflow] [STEP]  2.1: Apply cell to environment
2020-08-01 22:10:44,784 - FUNCflow - INFO - ONOSbench1: Successfully set cell:  cell temp
[01;31m[KONOS_CELL[m[K=temp
OCC1=192.168.171.28
OC1=192.168.171.28
OCI=192.168.171.28
OCN=192.168.171.17
ONOS_APPS=drivers,openflow
ONOS_GROUP=sdn
ONOS_MN_PY=/home/sdn/onos/tools/dev/mininet/onos.py
ONOS_NIC=192.168.171.*
ONOS_SCENARIOS=/home/sdn/onos/tools/test/scenarios
ONOS_USER=sdn
ONOS_USE_SSH=true
ONOS_WEB_PASS=rocks
ONOS_WEB_USER=onos
sdn@manage:~/onos$
2020-08-01 22:10:45,084 - FUNCflow - INFO - ONOSbench1: Successfully set cell:  cell temp
[01;31m[KONOS_CELL[m[K=temp
OCC1=192.168.171.28
OC1=192.168.171.28
OCI=192.168.171.28
OCN=192.168.171.17
ONOS_APPS=drivers,openflow
ONOS_GROUP=sdn
ONOS_MN_PY=/home/sdn/onos/tools/dev/mininet/onos.py
ONOS_NIC=192.168.171.*
ONOS_SCENARIOS=/home/sdn/onos/tools/test/scenarios
ONOS_TOPO=default
ONOS_USER=sdn
ONOS_USE_SSH=true
ONOS_WEB_PASS=rocks
ONOS_WEB_USER=onos
sdn@manage:~/onos$
2020-08-01 22:10:46,751 - FUNCflow - INFO - Verify cell returned:  onos-verify-cell
192.168.171.17: node
192.168.171.28: node-1
sdn@manage:~/onos$
2020-08-01 22:10:46,752 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:10:46,752 - FUNCflow - INFO - Successfully applied cell to environment
2020-08-01 22:10:46,752 - FUNCflow - INFO - Assertion Passed
2020-08-01 22:10:46,752 - FUNCflow - INFO - Safety check, killing all Atomix processes
2020-08-01 22:10:47,697 - FUNCflow - INFO - Atomix instance 192.168.171.28 was killed
2020-08-01 22:10:47,697 - FUNCflow - INFO - Safety check, killing all ONOS processes
2020-08-01 22:10:48,720 - FUNCflow - INFO - ONOS instance 192.168.171.28 was killed
[2020-08-01 22:10:48.721380] [FUNCflow] [STEP]  2.2: Uninstalling Atomix
2020-08-01 22:10:49,620 - FUNCflow - INFO - Atomix 192.168.171.28 was uninstalled
2020-08-01 22:10:49,621 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:10:49,622 - FUNCflow - INFO - Successfully uninstalled Atomix
2020-08-01 22:10:49,622 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:10:49.622444] [FUNCflow] [STEP]  2.3: Uninstalling ONOS package
2020-08-01 22:12:25,843 - FUNCflow - INFO - ONOS 192.168.171.28 was uninstalled
2020-08-01 22:12:25,844 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:12:25,844 - FUNCflow - INFO - Successfully uninstalled ONOS package
2020-08-01 22:12:25,845 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:12:25.845542] [FUNCflow] [STEP]  2.4: Creating ONOS package
[95m2020-08-01 22:12:27,087 - FUNCflow - DEBUG - 
[32mLoading:[0m 
[1A[K[32mLoading:[0m 0 packages loaded
[1A[K[32mAnalyzing:[0m target //:onos (0 packages loaded, 0 targets configured)
[1A[K[32mINFO: [0mAnalyzed target //:onos (0 packages loaded, 0 targets configured).

[1A[K[32mINFO: [0mFound 1 target...

[1A[K[32m[0 / 2][0m [Prepa] BazelWorkspaceStatusAction stable-status.txt
[1A[KTarget //:onos up-to-date:
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/utils/osgiwrap/osgi-jar.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/utils/osgiwrap/osgi-jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/utils/osgi/libonlab-osgi.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/utils/junit/libonlab-junit.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/utils/misc/libonlab-misc.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/utils/rest/libonlab-rest.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/core/api/libonos-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/core/net/libonos-core-net.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/core/common/libonos-core-common.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/core/protobuf/models/libonos-core-protobuf-models.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/core/protobuf/models/proto/libonos-core-protobuf-models-proto.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/core/store/primitives/libonos-core-primitives.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/core/store/serializers/libonos-core-serializers.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/core/store/dist/libonos-core-dist.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/core/store/persistence/libonos-core-persistence.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/cli/libonos-cli.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/utilities/libonos-drivers-utilities.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/general/device/libonos-providers-general-device.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/web/api/libonos-rest.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/tools/build/conf/libonos-build-conf.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/onos-admin.tar.gz
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/onos-test.tar.gz
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/onos.tar.gz
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/bgp/bgpio/libonos-protocols-bgp-bgpio.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/bgp/api/libonos-protocols-bgp-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/bgp/ctl/libonos-protocols-bgp-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/isis/api/libonos-protocols-isis-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/isis/ctl/libonos-protocols-isis-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/isis/isisio/libonos-protocols-isis-isisio.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/lisp/api/libonos-protocols-lisp-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/lisp/ctl/libonos-protocols-lisp-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/lisp/msg/libonos-protocols-lisp-msg.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/netconf/api/libonos-protocols-netconf-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/netconf/ctl/libonos-protocols-netconf-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/openflow/api/libonos-protocols-openflow-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/openflow/ctl/libonos-protocols-openflow-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/ospf/api/libonos-protocols-ospf-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/ospf/protocol/libonos-protocols-ospf-protocol.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/ospf/ctl/libonos-protocols-ospf-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/ovsdb/rfc/libonos-protocols-ovsdb-rfc.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/ovsdb/api/libonos-protocols-ovsdb-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/ovsdb/ctl/libonos-protocols-ovsdb-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/p4runtime/api/libonos-protocols-p4runtime-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/p4runtime/model/libonos-protocols-p4runtime-model.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/pcep/pcepio/libonos-protocols-pcep-pcepio.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/pcep/server/api/libonos-protocols-pcep-server-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/pcep/server/ctl/libonos-protocols-pcep-server-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/rest/api/libonos-protocols-rest-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/rest/ctl/libonos-protocols-rest-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/restconf/client/api/libonos-protocols-restconf-client-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/restconf/client/ctl/libonos-protocols-restconf-client-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/snmp/api/libonos-protocols-snmp-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/snmp/ctl/libonos-protocols-snmp-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/tl1/api/libonos-protocols-tl1-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/tl1/ctl/libonos-protocols-tl1-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/xmpp/core/api/libonos-protocols-xmpp-core-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/xmpp/core/ctl/libonos-protocols-xmpp-core-ctl.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/netconf/device/libonos-providers-netconf-device.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/openflow/device/libonos-providers-openflow-device.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/openflow/packet/libonos-providers-openflow-packet.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/openflow/flow/libonos-providers-openflow-flow.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/openflow/group/libonos-providers-openflow-group.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/openflow/meter/libonos-providers-openflow-meter.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/ovsdb/device/libonos-providers-ovsdb-device.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/ovsdb/tunnel/libonos-providers-ovsdb-tunnel.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/p4runtime/packet/libonos-providers-p4runtime-packet.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/rest/device/libonos-providers-rest-device.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/snmp/device/libonos-providers-snmp-device.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/isis/cfg/libonos-providers-isis-cfg.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/isis/topology/libonos-providers-isis-topology.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/lisp/device/libonos-providers-lisp-device.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/tl1/device/libonos-providers-tl1-device.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/grpc/onos-protocols-grpc-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/gnmi/onos-protocols-gnmi-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/gnoi/onos-protocols-gnoi-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/p4runtime/onos-protocols-p4runtime-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/restconf/server/onos-protocols-restconf-server-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/xmpp/core/onos-protocols-xmpp-core-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/protocols/xmpp/pubsub/onos-protocols-xmpp-pubsub-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/general/onos-providers-general-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/bgp/onos-providers-bgp-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/bgpcep/onos-providers-bgpcep-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/host/onos-providers-host-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/hostprobing/onos-providers-hostprobing-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/isis/onos-providers-isis-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/link/onos-providers-link-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/lldp/onos-providers-lldp-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/netcfghost/onos-providers-netcfghost-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/netcfglinks/onos-providers-netcfglinks-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/netconf/onos-providers-netconf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/null/onos-providers-null-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/openflow/app/onos-providers-openflow-app-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/openflow/base/onos-providers-openflow-base-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/openflow/message/onos-providers-openflow-message-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/ovsdb/onos-providers-ovsdb-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/ovsdb/host/onos-providers-ovsdb-host-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/ovsdb/base/onos-providers-ovsdb-base-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/p4runtime/onos-providers-p4runtime-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/pcep/onos-providers-pcep-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/rest/onos-providers-rest-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/snmp/onos-providers-snmp-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/lisp/onos-providers-lisp-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/tl1/onos-providers-tl1-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/providers/xmpp/device/onos-providers-xmpp-device-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/default/onos-drivers-default-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/arista/onos-drivers-arista-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/bmv2/onos-drivers-bmv2-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/barefoot/onos-drivers-barefoot-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/ciena/waveserver/onos-drivers-ciena-waveserver-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/ciena/c5162/onos-drivers-ciena-c5162-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/ciena/c5170/onos-drivers-ciena-c5170-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/ciena/waveserverai/onos-drivers-ciena-waveserverai-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/cisco/netconf/onos-drivers-cisco-netconf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/cisco/rest/onos-drivers-cisco-rest-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/corsa/onos-drivers-corsa-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/czechlight/onos-drivers-czechlight-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/flowspec/onos-drivers-flowspec-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/fujitsu/onos-drivers-fujitsu-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/gnmi/onos-drivers-gnmi-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/gnoi/onos-drivers-gnoi-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/hp/onos-drivers-hp-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/huawei/onos-drivers-huawei-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/juniper/onos-drivers-juniper-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/lisp/onos-drivers-lisp-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/lumentum/onos-drivers-lumentum-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/mellanox/onos-drivers-mellanox-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/netconf/onos-drivers-netconf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/odtn-driver/onos-drivers-odtn-driver-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/oplink/onos-drivers-oplink-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/optical/onos-drivers-optical-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/ovsdb/onos-drivers-ovsdb-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/p4runtime/onos-drivers-p4runtime-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/polatis/netconf/onos-drivers-polatis-netconf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/polatis/openflow/onos-drivers-polatis-openflow-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/server/onos-drivers-server-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/stratum/onos-drivers-stratum-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/drivers/zte/onos-drivers-zte-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/acl/onos-apps-acl-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/artemis/onos-apps-artemis-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/bgprouter/onos-apps-bgprouter-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/castor/onos-apps-castor-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/cfm/onos-apps-cfm-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/cip/onos-apps-cip-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/config/onos-apps-config-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/configsync-netconf/onos-apps-configsync-netconf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/configsync/onos-apps-configsync-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/cord-support/onos-apps-cord-support-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/cpman/app/onos-apps-cpman-app-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/dhcp/onos-apps-dhcp-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/dhcprelay/onos-apps-dhcprelay-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/drivermatrix/onos-apps-drivermatrix-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/events/onos-apps-events-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/evpn-route-service/onos-apps-evpn-route-service-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/evpnopenflow/onos-apps-evpnopenflow-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/faultmanagement/onos-apps-faultmanagement-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/flowanalyzer/onos-apps-flowanalyzer-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/flowspec-api/onos-apps-flowspec-api-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/fwd/onos-apps-fwd-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/gangliametrics/onos-apps-gangliametrics-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/gluon/onos-apps-gluon-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/graphitemetrics/onos-apps-graphitemetrics-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/imr/onos-apps-imr-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/inbandtelemetry/onos-apps-inbandtelemetry-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/influxdbmetrics/onos-apps-influxdbmetrics-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/intentsync/onos-apps-intentsync-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/k8s-networking/onos-apps-k8s-networking-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/k8s-node/onos-apps-k8s-node-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/kafka-integration/onos-apps-kafka-integration-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/l3vpn/onos-apps-l3vpn-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/layout/onos-apps-layout-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/linkprops/onos-apps-linkprops-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/mappingmanagement/onos-apps-mappingmanagement-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/mcast/onos-apps-mcast-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/metrics/onos-apps-metrics-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/mfwd/onos-apps-mfwd-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/mlb/onos-apps-mlb-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/mobility/onos-apps-mobility-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/netconf/client/onos-apps-netconf-client-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/network-troubleshoot/onos-apps-network-troubleshoot-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/newoptical/onos-apps-newoptical-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/nodemetrics/onos-apps-nodemetrics-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/node-diagnosis/onos-apps-node-diagnosis-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/odtn/api/onos-apps-odtn-api-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/odtn/service/onos-apps-odtn-service-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/ofagent/onos-apps-ofagent-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/onlp-demo/onos-apps-onlp-demo-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/onos-topo/onos-apps-onos-topo-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/openroadm/onos-apps-openroadm-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/openstacknetworking/onos-apps-openstacknetworking-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/openstacknetworkingui/onos-apps-openstacknetworkingui-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/openstacknode/onos-apps-openstacknode-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/openstacktelemetry/onos-apps-openstacktelemetry-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/openstacktroubleshoot/onos-apps-openstacktroubleshoot-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/openstackvtap/onos-apps-openstackvtap-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/optical-model/onos-apps-optical-model-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/optical-rest/onos-apps-optical-rest-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/p4-tutorial/mytunnel/onos-apps-p4-tutorial-mytunnel-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/p4-tutorial/pipeconf/onos-apps-p4-tutorial-pipeconf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/packet-stats/onos-apps-packet-stats-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/packet-throttle/onos-apps-packet-throttle-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/pathpainter/onos-apps-pathpainter-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/pcep-api/onos-apps-pcep-api-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/pim/onos-apps-pim-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/portloadbalancer/onos-apps-portloadbalancer-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/powermanagement/onos-apps-powermanagement-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/proxyarp/onos-apps-proxyarp-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/rabbitmq/onos-apps-rabbitmq-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/reactive-routing/onos-apps-reactive-routing-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/restconf/onos-apps-restconf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/roadm/onos-apps-roadm-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/route-service/onos-apps-route-service-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/routeradvertisement/onos-apps-routeradvertisement-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/routing/cpr/onos-apps-routing-cpr-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/routing/fibinstaller/onos-apps-routing-fibinstaller-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/routing/fpm/onos-apps-routing-fpm-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/scalablegateway/onos-apps-scalablegateway-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/sdnip/onos-apps-sdnip-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/simplefabric/onos-apps-simplefabric-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/cluster-ha/onos-apps-test-cluster-ha-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/demo/onos-apps-test-demo-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/distributed-primitives/onos-apps-test-distributed-primitives-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/election/onos-apps-test-election-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/flow-perf/onos-apps-test-flow-perf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/intent-perf/onos-apps-test-intent-perf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/loadtest/onos-apps-test-loadtest-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/messaging-perf/onos-apps-test-messaging-perf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/netcfg-monitor/onos-apps-test-netcfg-monitor-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/primitive-perf/onos-apps-test-primitive-perf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/route-scale/onos-apps-test-route-scale-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/test/transaction-perf/onos-apps-test-transaction-perf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/tetopology/onos-apps-tetopology-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/tetunnel/onos-apps-tetunnel-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/tunnel/onos-apps-tunnel-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/virtual/onos-apps-virtual-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/virtualbng/onos-apps-virtualbng-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/vpls/onos-apps-vpls-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/vrouter/onos-apps-vrouter-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/vtn/onos-apps-vtn-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/workflow/ofoverlay/onos-apps-workflow-ofoverlay-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/workflow/onos-apps-workflow-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/yang-gui/onos-apps-yang-gui-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/yang/onos-apps-yang-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/web/gui/onos-web-gui-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/web/gui2/onos-web-gui2-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/cpman/api/libonos-apps-cpman-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/routing-api/libonos-apps-routing-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/dhcp/api/libonos-apps-dhcp-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/dhcp/app/libonos-apps-dhcp-app.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/imr/api/libonos-apps-imr-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/imr/app/libonos-apps-imr-app.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/dhcprelay/app/libonos-apps-dhcprelay-app.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/dhcprelay/web/libonos-apps-dhcprelay-web.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/fwd/libonos-apps-fwd.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/iptopology-api/libonos-apps-iptopology-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/kafka-integration/api/libonos-apps-kafka-integration-api.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/kafka-integration/app/libonos-apps-kafka-integration-app.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/routing/common/libonos-apps-routing-common.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/vtn/vtnrsc/libonos-apps-vtn-vtnrsc.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/vtn/sfcmgr/libonos-apps-vtn-sfcmgr.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/vtn/vtnmgr/libonos-apps-vtn-vtnmgr.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/apps/vtn/vtnweb/libonos-apps-vtn-vtnweb.jar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/pipelines/basic/onos-pipelines-basic-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/pipelines/fabric/onos-pipelines-fabric-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/models/ietf/onos-models-ietf-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/models/common/onos-models-common-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/models/huawei/onos-models-huawei-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/models/openconfig/onos-models-openconfig-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/models/openconfig-infinera/onos-models-openconfig-infinera-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/models/openconfig-odtn/onos-models-openconfig-odtn-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/models/openroadm/onos-models-openroadm-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/models/tapi/onos-models-tapi-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/models/l3vpn/onos-models-l3vpn-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/models/polatis/onos-models-polatis-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K  bazel-bin/models/ciena/waveserverai/onos-models-ciena-waveserverai-oar.oar
[32m[2 / 2][0m checking cached actions
[1A[K[32mINFO: [0mElapsed time: 1.088s, Critical Path: 0.02s
[32m[2 / 2][0m checking cached actions
[1A[K[32mINFO: [0m0 processes.
[32m[2 / 2][0m checking cached actions
[1A[K[32mINFO:[0m Build completed successfully, 1 total action
[1A[K[32mINFO:[0m Build completed successfully, 1 total action
[0msdn@manage:~/onos$[0m
2020-08-01 22:12:27,088 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:12:27,088 - FUNCflow - INFO - Successfully created ONOS package
2020-08-01 22:12:27,088 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:12:27.088966] [FUNCflow] [STEP]  2.5: Installing Atomix
2020-08-01 22:12:32,233 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:12:32,234 - FUNCflow - INFO - Successfully installed Atomix
2020-08-01 22:12:32,234 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:12:32.234905] [FUNCflow] [STEP]  2.6: Installing ONOS package
2020-08-01 22:12:59,016 - FUNCflow - INFO - ONOS was installed on 192.168.171.28 and started.
2020-08-01 22:12:59,017 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:12:59,017 - FUNCflow - INFO - Successfully installed ONOS package
2020-08-01 22:12:59,018 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:12:59.018381] [FUNCflow] [STEP]  2.7: Set up ONOS secure SSH
2020-08-01 22:12:59,244 - FUNCflow - INFO - ONOSbench1: Secure SSH performed on 192.168.171.28
2020-08-01 22:12:59,245 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:12:59,245 - FUNCflow - INFO - Secured ONOS ssh
2020-08-01 22:12:59,246 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:12:59.246402] [FUNCflow] [STEP]  2.8: Checking ONOS service
2020-08-01 22:13:05,257 - FUNCflow - INFO - ONOSbench1: 192.168.171.28 is up
2020-08-01 22:13:10,263 - FUNCflow - INFO - ONOS1 is up and ready
2020-08-01 22:13:10,263 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:13:10,264 - FUNCflow - INFO - ONOS service is ready on all nodes
2020-08-01 22:13:10,264 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:13:10.264482] [FUNCflow] [STEP]  2.9: Starting ONOS CLI sessions
2020-08-01 22:13:12,086 - FUNCflow - INFO - 192.168.171.28 CLI Started successfully
[95m2020-08-01 22:13:12,086 - FUNCflow - DEBUG -  onos 192.168.171.28
Welcome to Open Network Operating System (ONOS)!
[1;31m     ____  _  ______  ____     [0m
[1;31m    / __ \/ |/ / __ \/ __/   [0m
[1;31m   / /_/ /    / /_/ /\ \     [0m
[1;31m   \____/_/|_/\____/___/     [0m
[1;31m                               [0m
Documentation: wiki.onosproject.org      
Tutorials:     tutorials.onosproject.org 
Mailing lists: lists.onosproject.org     

Come help out! Find out how at: contribute.onosproject.org 

Hit '[1m<tab>[0m' for a list of available commands
and '[1m[cmd] --help[0m' for help on a specific command.
Hit '[1m<ctrl-d>[0m' or type '[1mlogout[0m' to exit ONOS session.

[?1h=[90m~[0m                                                                                [?2004h[0m
2020-08-01 22:13:12,087 - FUNCflow - INFO - Successful CLI startup
2020-08-01 22:13:12,087 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:13:12,087 - FUNCflow - INFO - Successfully start ONOS cli
2020-08-01 22:13:12,088 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:13:12.088384] [FUNCflow] [STEP]  2.10: Checking ONOS nodes
2020-08-01 22:13:12,413 - FUNCflow - INFO - Command 'nodes -j' sent to ONOScli1.
[95m2020-08-01 22:13:12,415 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'nodes -j'
SENT COMMAND STRING WAS: 'nodes -j'[0m
[95m2020-08-01 22:13:12,415 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'nodes -j'
SENT COMMAND STRING WAS: 'nodes -j'[0m
[93m2020-08-01 22:13:12,525 - FUNCflow - WARNING - ['192.168.171.28'] != [][0m
2020-08-01 22:13:13,782 - FUNCflow - INFO - Command 'nodes -j' sent to ONOScli1.
[95m2020-08-01 22:13:13,782 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'nodes -j'
SENT COMMAND STRING WAS: 'nodes -j'[0m
[95m2020-08-01 22:13:13,782 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'nodes -j'
SENT COMMAND STRING WAS: 'nodes -j'[0m
[93m2020-08-01 22:13:13,898 - FUNCflow - WARNING - ['192.168.171.28'] != [][0m
2020-08-01 22:13:15,158 - FUNCflow - INFO - Command 'nodes -j' sent to ONOScli1.
[95m2020-08-01 22:13:15,158 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'nodes -j'
SENT COMMAND STRING WAS: 'nodes -j'[0m
[95m2020-08-01 22:13:15,158 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'nodes -j'
SENT COMMAND STRING WAS: 'nodes -j'[0m
[95m2020-08-01 22:13:15,268 - FUNCflow - DEBUG - <bound method Cluster.nodesCheck of Cluster[{ONOS1:192.168.171.28, Configured - Active}; Atomix Nodes:{ONOS1:192.168.171.28}]> was retried 2 times.[0m
2020-08-01 22:13:15,269 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:13:15,269 - FUNCflow - INFO - All ONOS nodes are in READY state
2020-08-01 22:13:15,269 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:13:15.270154] [FUNCflow] [STEP]  2.11: Checking ONOS applications
2020-08-01 22:13:15,694 - FUNCflow - INFO - Command 'onos:apps -j' sent to ONOScli1.
[95m2020-08-01 22:13:15,711 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'onos:apps -j'
SENT COMMAND STRING WAS: 'onos:apps -j'[0m
[95m2020-08-01 22:13:15,711 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'onos:apps -j'
SENT COMMAND STRING WAS: 'onos:apps -j'[0m
[93m2020-08-01 22:13:15,711 - FUNCflow - WARNING - Relaxed Regex: Searching for a json string amongst the output[0m
2020-08-01 22:13:15,834 - FUNCflow - INFO - ONOS1: org.onosproject.drivers is activated
2020-08-01 22:13:16,210 - FUNCflow - INFO - Command 'onos:apps -j' sent to ONOScli1.
[95m2020-08-01 22:13:16,227 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'onos:apps -j'
SENT COMMAND STRING WAS: 'onos:apps -j'[0m
[95m2020-08-01 22:13:16,227 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'onos:apps -j'
SENT COMMAND STRING WAS: 'onos:apps -j'[0m
[93m2020-08-01 22:13:16,227 - FUNCflow - WARNING - Relaxed Regex: Searching for a json string amongst the output[0m
2020-08-01 22:13:16,340 - FUNCflow - INFO - ONOS1: org.onosproject.openflow is activated
2020-08-01 22:13:16,341 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:13:16,341 - FUNCflow - INFO - All ONOS apps are activated
2020-08-01 22:13:16,341 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase10
******************************

[95m2020-08-01 22:13:16,344 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10][0m
[95m2020-08-01 22:13:16,344 - FUNCflow - DEBUG - Case to be executed : [11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:13:16.346438] [FUNCflow] [CASE]  Setup mininet and compare ONOS topology view to Mininet topology
[2020-08-01 22:13:16.347565] [FUNCflow] [STEP]  10.1: Setup Mininet Topology
2020-08-01 22:13:16,348 - FUNCflow - INFO - Mininet1: Clearing any residual state or processes
2020-08-01 22:13:17,768 - FUNCflow - INFO - Mininet1: Clean
2020-08-01 22:13:17,769 - FUNCflow - INFO - Starting Mininet from topo file ~/mininet/custom/topo-flow.py
2020-08-01 22:13:17,870 - FUNCflow - INFO - Sending 'sudo -E python ~/mininet/custom/topo-flow.py ' to Mininet1
2020-08-01 22:13:18,011 - FUNCflow - INFO -  Creating network
2020-08-01 22:13:18,012 - FUNCflow - INFO -  Adding hosts:
2020-08-01 22:13:18,112 - FUNCflow - INFO -  Adding switches:
2020-08-01 22:13:18,137 - FUNCflow - INFO -  Adding links:
2020-08-01 22:13:18,189 - FUNCflow - INFO -  Configuring hosts
2020-08-01 22:13:18,349 - FUNCflow - INFO -  Starting controller
2020-08-01 22:13:18,349 - FUNCflow - INFO -  Starting 1 switches
2020-08-01 22:13:18,367 - FUNCflow - INFO -  Starting CLI:
2020-08-01 22:13:18,372 - FUNCflow - INFO - Mininet1: Mininet built
Time Took : 0.401044130325
2020-08-01 22:13:18,372 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:13:18,372 - FUNCflow - INFO - Successfully loaded topology
2020-08-01 22:13:18,372 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:13:18.373429] [FUNCflow] [STEP]  10.2: Assign switch to controller
2020-08-01 22:13:18,485 - FUNCflow - INFO - Executed :sh ovs-vsctl set-controller s1 tcp:192.168.171.28:6653 		 Expected Prompt 'mininet>' Found
2020-08-01 22:13:18,486 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:13:18,486 - FUNCflow - INFO - Successfully assigned switch to controller
2020-08-01 22:13:18,486 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:13:23.492125] [FUNCflow] [CASE]  Compare ONOS Topology view to Mininet topology
2020-08-01 22:13:23,493 - FUNCflow - INFO - Gathering topology information from Mininet
2020-08-01 22:13:23,493 - FUNCflow - INFO - Updating MN port information
2020-08-01 22:13:23,836 - FUNCflow - INFO - Mininet1: Dump node info
2020-08-01 22:13:23,939 - FUNCflow - INFO - Executed :dump 		 Expected Prompt 'mininet>' Found
2020-08-01 22:13:24,043 - FUNCflow - INFO - Executed :py s1.dpid 		 Expected Prompt 'mininet>' Found
2020-08-01 22:13:24,159 - FUNCflow - INFO - Updating MN port information
2020-08-01 22:13:24,503 - FUNCflow - INFO - Mininet1: List network links
2020-08-01 22:13:24,656 - FUNCflow - INFO - Executed :links 		 Expected Prompt 'mininet>' Found
2020-08-01 22:13:24,658 - FUNCflow - INFO - Updating MN port information
2020-08-01 22:13:24,997 - FUNCflow - INFO - Mininet1: Dump node info
2020-08-01 22:13:25,100 - FUNCflow - INFO - Executed :dump 		 Expected Prompt 'mininet>' Found
[2020-08-01 22:13:25.737969] [FUNCflow] [STEP]  10.3: Comparing Mininet topology to ONOS topology
2020-08-01 22:13:25,739 - FUNCflow - INFO - Sleeping 2 seconds
2020-08-01 22:13:28,010 - FUNCflow - INFO - Command 'devices -j' sent to ONOScli1.
[95m2020-08-01 22:13:28,011 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'devices -j'
SENT COMMAND STRING WAS: 'devices -j'[0m
[95m2020-08-01 22:13:28,011 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'devices -j'
SENT COMMAND STRING WAS: 'devices -j'[0m
2020-08-01 22:13:28,386 - FUNCflow - INFO - Command 'ports -j' sent to ONOScli1.
[95m2020-08-01 22:13:28,387 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'ports -j'
SENT COMMAND STRING WAS: 'ports -j'[0m
[95m2020-08-01 22:13:28,387 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'ports -j'
SENT COMMAND STRING WAS: 'ports -j'[0m
2020-08-01 22:13:28,758 - FUNCflow - INFO - Command 'links -j' sent to ONOScli1.
[95m2020-08-01 22:13:28,759 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'links -j'
SENT COMMAND STRING WAS: 'links -j'[0m
[95m2020-08-01 22:13:28,759 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'links -j'
SENT COMMAND STRING WAS: 'links -j'[0m
2020-08-01 22:13:29,134 - FUNCflow - INFO - Command 'hosts -j' sent to ONOScli1.
[95m2020-08-01 22:13:29,134 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'hosts -j'
SENT COMMAND STRING WAS: 'hosts -j'[0m
[95m2020-08-01 22:13:29,135 - FUNCflow - DEBUG - REGEX PATTERN SET TO: 'hosts -j'
SENT COMMAND STRING WAS: 'hosts -j'[0m
2020-08-01 22:13:29,310 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:13:29,311 - FUNCflow - INFO - ONOS correctly discovered all devices
2020-08-01 22:13:29,311 - FUNCflow - INFO - Assertion Passed
2020-08-01 22:13:29,311 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:13:29,311 - FUNCflow - INFO - ONOS correctly discovered all links
2020-08-01 22:13:29,311 - FUNCflow - INFO - Assertion Passed
2020-08-01 22:13:29,311 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:13:29,311 - FUNCflow - INFO - ONOS correctly discovered all hosts
2020-08-01 22:13:29,311 - FUNCflow - INFO - Assertion Passed
2020-08-01 22:13:29,312 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:13:29,312 - FUNCflow - INFO - ONOS correctly discovered the topology
2020-08-01 22:13:29,312 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase11
******************************

[95m2020-08-01 22:13:29,313 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11][0m
[95m2020-08-01 22:13:29,313 - FUNCflow - DEBUG - Case to be executed : [1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:13:29.313847] [FUNCflow] [CASE]  Starting scapy with Mininet
[2020-08-01 22:13:29.314495] [FUNCflow] [STEP]  11.1: Creating Host component
2020-08-01 22:13:29,315 - FUNCflow - INFO - Creating component Handle: h1
2020-08-01 22:13:30,261 - FUNCflow - INFO - Password not required logged in
2020-08-01 22:13:30,465 - FUNCflow - INFO - Connection successful to the host sdn@192.168.171.17
2020-08-01 22:13:30,466 - FUNCflow - INFO - Creating component Handle: h2
2020-08-01 22:13:31,490 - FUNCflow - INFO - Password not required logged in
2020-08-01 22:13:31,695 - FUNCflow - INFO - Connection successful to the host sdn@192.168.171.17
2020-08-01 22:13:31,695 - FUNCflow - INFO - Creating component Handle: h3
2020-08-01 22:13:32,652 - FUNCflow - INFO - Password not required logged in
2020-08-01 22:13:32,857 - FUNCflow - INFO - Connection successful to the host sdn@192.168.171.17
2020-08-01 22:13:32,857 - FUNCflow - INFO - Creating component Handle: h4
2020-08-01 22:13:33,673 - FUNCflow - INFO - Password not required logged in
2020-08-01 22:13:33,878 - FUNCflow - INFO - Connection successful to the host sdn@192.168.171.17
2020-08-01 22:13:33,878 - FUNCflow - INFO - Creating component Handle: h5
2020-08-01 22:13:34,628 - FUNCflow - INFO - Password not required logged in
2020-08-01 22:13:34,833 - FUNCflow - INFO - Connection successful to the host sdn@192.168.171.17
2020-08-01 22:13:34,833 - FUNCflow - INFO - Creating component Handle: h6
2020-08-01 22:13:35,569 - FUNCflow - INFO - Password not required logged in
2020-08-01 22:13:35,774 - FUNCflow - INFO - Connection successful to the host sdn@192.168.171.17
[2020-08-01 22:13:35.775596] [FUNCflow] [STEP]  11.2: Start scapy components
[95m2020-08-01 22:13:36,080 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:13:38,141 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:13:38,141 - FUNCflow - DEBUG - 10.0.0.1[0m
[95m2020-08-01 22:13:38,142 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:13:38,444 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:13:40,494 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:13:40,495 - FUNCflow - DEBUG - 10.0.0.2[0m
[95m2020-08-01 22:13:40,495 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:13:40,797 - FUNCflow - DEBUG - h3: Starting scapy[0m
[93m2020-08-01 22:13:42,866 - FUNCflow - WARNING - iface h3-eth0 has no IPv4 address[0m
[95m2020-08-01 22:13:42,866 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:13:42,866 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:13:42,867 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:13:43,169 - FUNCflow - DEBUG - h4: Starting scapy[0m
[93m2020-08-01 22:13:45,209 - FUNCflow - WARNING - iface h4-eth0 has no IPv4 address[0m
[95m2020-08-01 22:13:45,209 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:13:45,210 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:13:45,210 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:13:45,512 - FUNCflow - DEBUG - h5: Starting scapy[0m
[93m2020-08-01 22:13:47,668 - FUNCflow - WARNING - iface h5-eth0 has no IPv4 address[0m
[95m2020-08-01 22:13:47,668 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:13:47,668 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:13:47,668 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:13:47,971 - FUNCflow - DEBUG - h6: Starting scapy[0m
[93m2020-08-01 22:13:50,024 - FUNCflow - WARNING - iface h6-eth0 has no IPv4 address[0m
[95m2020-08-01 22:13:50,024 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:13:50,024 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:13:50,024 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
2020-08-01 22:13:50,025 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:13:50,025 - FUNCflow - INFO - Successfully created Scapy Components
2020-08-01 22:13:50,025 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase1000
******************************

[95m2020-08-01 22:13:50,028 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000][0m
[95m2020-08-01 22:13:50,028 - FUNCflow - DEBUG - Case to be executed : [3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:13:50.029325] [FUNCflow] [CASE]  Verify flow MAC selectors are correctly compiled
[2020-08-01 22:13:50.030813] [FUNCflow] [STEP]  1000.1: Add flows with MAC addresses as the only selectors
[95m2020-08-01 22:13:50,031 - FUNCflow - DEBUG - h1: Stopping scapy[0m
[95m2020-08-01 22:13:50,159 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:13:52,293 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:13:52,293 - FUNCflow - DEBUG - 10.0.0.1[0m
[95m2020-08-01 22:13:52,293 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:13:52,294 - FUNCflow - DEBUG - h2: Stopping scapy[0m
[95m2020-08-01 22:13:52,424 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:13:54,471 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:13:54,471 - FUNCflow - DEBUG - 10.0.0.2[0m
[95m2020-08-01 22:13:54,471 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:13:54,471 - FUNCflow - DEBUG - h3: Stopping scapy[0m
[95m2020-08-01 22:13:54,609 - FUNCflow - DEBUG - h3: Starting scapy[0m
[93m2020-08-01 22:13:56,655 - FUNCflow - WARNING - iface h3-eth0 has no IPv4 address[0m
[95m2020-08-01 22:13:56,655 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:13:56,656 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:13:56,656 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:13:56,656 - FUNCflow - DEBUG - h4: Stopping scapy[0m
[95m2020-08-01 22:13:56,790 - FUNCflow - DEBUG - h4: Starting scapy[0m
[93m2020-08-01 22:13:58,958 - FUNCflow - WARNING - iface h4-eth0 has no IPv4 address[0m
[95m2020-08-01 22:13:58,958 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:13:58,959 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:13:58,959 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:13:58,959 - FUNCflow - DEBUG - h5: Stopping scapy[0m
[95m2020-08-01 22:13:59,095 - FUNCflow - DEBUG - h5: Starting scapy[0m
[93m2020-08-01 22:14:01,162 - FUNCflow - WARNING - iface h5-eth0 has no IPv4 address[0m
[95m2020-08-01 22:14:01,162 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:14:01,162 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:14:01,162 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:14:01,162 - FUNCflow - DEBUG - h6: Stopping scapy[0m
[95m2020-08-01 22:14:01,289 - FUNCflow - DEBUG - h6: Starting scapy[0m
[93m2020-08-01 22:14:03,377 - FUNCflow - WARNING - iface h6-eth0 has no IPv4 address[0m
[95m2020-08-01 22:14:03,378 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:14:03,378 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:14:03,378 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
2020-08-01 22:14:03,378 - FUNCflow - INFO - Adding flow with MAC selectors
[95m2020-08-01 22:14:03,379 - FUNCflow - DEBUG - Adding flow: {
    "deviceId": "of:0000000000000001",
    "isPermanent": "true",
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "mac": "00:00:00:00:00:01",
                "type": "ETH_SRC"
            },
            {
                "mac": "00:00:00:00:00:02",
                "type": "ETH_DST"
            }
        ]
    },
    "timeout": 0,
    "treatment": {
        "instructions": [
            {
                "port": 2,
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:14:03,379 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:14:03,380 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:14:03,380 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:14:03,380 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001 using POST method.
2020-08-01 22:14:03,583 - FUNCflow - INFO - ONOSrest1: Successfully POST flowin device: of:0000000000000001
2020-08-01 22:14:03,584 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:14:03,584 - FUNCflow - INFO - Successfully added flows
2020-08-01 22:14:03,584 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:14:13.595886] [FUNCflow] [STEP]  1000.2: Check flow is in the ADDED state
2020-08-01 22:14:13,597 - FUNCflow - INFO - Get the flows from ONOS
[93m2020-08-01 22:14:13,598 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:14:13,598 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:14:13,598 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:14:13,598 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
2020-08-01 22:14:13,651 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:14:13,651 - FUNCflow - INFO - All flows are in the ADDED state
2020-08-01 22:14:13,651 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:14:13.651958] [FUNCflow] [STEP]  1000.3: Check flows are in Mininet's flow table
2020-08-01 22:14:13,652 - FUNCflow - INFO - Getting the flow IDs from ONOS
2020-08-01 22:14:13,652 - FUNCflow - INFO - ONOS flow IDs: ['0xc00000ffe26e4c']
2020-08-01 22:14:13,652 - FUNCflow - INFO - Getting flows from Mininet
2020-08-01 22:14:13,652 - FUNCflow - INFO - Sending: sh ovs-ofctl dump-flows s1 -O OpenFlow13
2020-08-01 22:14:13,776 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:14:13,776 - FUNCflow - INFO - All flows are in mininet
2020-08-01 22:14:13,776 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:14:13.777552] [FUNCflow] [STEP]  1000.4: Send a packet to verify the flows are correct
2020-08-01 22:14:13,778 - FUNCflow - INFO - Constructing packet
[95m2020-08-01 22:14:13,779 - FUNCflow - DEBUG - h1: Building Ethernet Frame[0m
2020-08-01 22:14:13,985 - FUNCflow - INFO - Starting filter on host2
2020-08-01 22:14:13,985 - FUNCflow - INFO - h2: Starting filter on interface None
2020-08-01 22:14:14,088 - FUNCflow - INFO - h2: Starting filter on h2 > pkts = sniff(count = 1, filter = "ether host 00:00:00:00:00:01", prn=lambda p: p.summary() )
2020-08-01 22:14:18,194 - FUNCflow - INFO - Sending packet to host2
[95m2020-08-01 22:14:18,194 - FUNCflow - DEBUG - h1: Sending Packet[0m
[95m2020-08-01 22:14:19,431 - FUNCflow - DEBUG - h1: Send packet response:  sendp( packet, return_packets=True).summary()
.
Sent 1 packets.
00:00:00:00:00:01 > 00:00:00:00:00:02 (LOOP)
[0m
2020-08-01 22:14:19,431 - FUNCflow - INFO - Checking filter for our packet
[95m2020-08-01 22:14:19,432 - FUNCflow - DEBUG - h2: Checking Filter[0m
[95m2020-08-01 22:14:19,533 - FUNCflow - DEBUG - h2: cleanOutput:[0m
[95m2020-08-01 22:14:19,533 - FUNCflow - DEBUG - h2: ' pkts = sniff(count = 1, filter = "ether host 00:00:00:00:00:01", prn=lambda p\rp: p.summary() )\r\n00:00:00:00:00:01 > 00:00:00:00:00:02 (LOOP)\r\n>>>'[0m
[95m2020-08-01 22:14:19,534 - FUNCflow - DEBUG - h2: Reading Packets[0m
[95m2020-08-01 22:14:19,534 - FUNCflow - DEBUG - h2: Begin clear buffer[0m
[95m2020-08-01 22:14:20,542 - FUNCflow - DEBUG - h2: end clear buffer[0m
2020-08-01 22:14:21,648 - FUNCflow - INFO - Packet:  pkts.summary()
00:00:00:00:00:01 > 00:00:00:00:00:02 (LOOP)

2020-08-01 22:14:21,648 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:14:21,648 - FUNCflow - INFO - Successfully sent a packet
2020-08-01 22:14:21,649 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase3000
******************************

[95m2020-08-01 22:14:21,651 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000][0m
[95m2020-08-01 22:14:21,652 - FUNCflow - DEBUG - Case to be executed : [1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:14:21.652457] [FUNCflow] [CASE]  Delete flows that were added through rest
[2020-08-01 22:14:21.654458] [FUNCflow] [STEP]  3000.1: Deleting flows
2020-08-01 22:14:21,655 - FUNCflow - INFO - Getting flows
[93m2020-08-01 22:14:21,656 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:14:21,656 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:14:21,656 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:14:21,656 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
[95m2020-08-01 22:14:21,675 - FUNCflow - DEBUG - Flow to be deleted:
{
    "appId": "org.onosproject.rest",
    "bytes": 14,
    "deviceId": "of:0000000000000001",
    "groupId": 0,
    "id": "54043199821475404",
    "isPermanent": true,
    "lastSeen": 1596320059694,
    "life": 16,
    "liveType": "UNKNOWN",
    "packets": 1,
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "mac": "00:00:00:00:00:02",
                "type": "ETH_DST"
            },
            {
                "mac": "00:00:00:00:00:01",
                "type": "ETH_SRC"
            }
        ]
    },
    "state": "ADDED",
    "tableId": 0,
    "tableName": "0",
    "timeout": 0,
    "treatment": {
        "deferred": [],
        "instructions": [
            {
                "port": "2",
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:14:21,676 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:14:21,676 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:14:21,676 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:14:21,676 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001/54043199821475404 using DELETE method.
2020-08-01 22:14:21,687 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:14:21,687 - FUNCflow - INFO - Successfully deleting flows
2020-08-01 22:14:21,688 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase1100
******************************

[95m2020-08-01 22:14:31,701 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100][0m
[95m2020-08-01 22:14:31,701 - FUNCflow - DEBUG - Case to be executed : [3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:14:31.701761] [FUNCflow] [CASE]  Verify VLAN selector is correctly compiled
[95m2020-08-01 22:14:31,703 - FUNCflow - DEBUG - h1: Stopping scapy[0m
[95m2020-08-01 22:14:31,860 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:14:34,105 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:14:34,105 - FUNCflow - DEBUG - 10.0.0.1[0m
[95m2020-08-01 22:14:34,106 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:14:34,106 - FUNCflow - DEBUG - h2: Stopping scapy[0m
[95m2020-08-01 22:14:34,248 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:14:36,340 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:14:36,340 - FUNCflow - DEBUG - 10.0.0.2[0m
[95m2020-08-01 22:14:36,340 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:14:36,340 - FUNCflow - DEBUG - h3: Stopping scapy[0m
[95m2020-08-01 22:14:36,482 - FUNCflow - DEBUG - h3: Starting scapy[0m
[93m2020-08-01 22:14:38,515 - FUNCflow - WARNING - iface h3-eth0 has no IPv4 address[0m
[95m2020-08-01 22:14:38,515 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:14:38,515 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:14:38,516 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:14:38,516 - FUNCflow - DEBUG - h4: Stopping scapy[0m
[95m2020-08-01 22:14:38,665 - FUNCflow - DEBUG - h4: Starting scapy[0m
[93m2020-08-01 22:14:40,726 - FUNCflow - WARNING - iface h4-eth0 has no IPv4 address[0m
[95m2020-08-01 22:14:40,726 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:14:40,726 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:14:40,726 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:14:40,726 - FUNCflow - DEBUG - h5: Stopping scapy[0m
[95m2020-08-01 22:14:40,878 - FUNCflow - DEBUG - h5: Starting scapy[0m
[93m2020-08-01 22:14:43,072 - FUNCflow - WARNING - iface h5-eth0 has no IPv4 address[0m
[95m2020-08-01 22:14:43,072 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:14:43,072 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:14:43,073 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:14:43,073 - FUNCflow - DEBUG - h6: Stopping scapy[0m
[95m2020-08-01 22:14:43,223 - FUNCflow - DEBUG - h6: Starting scapy[0m
[93m2020-08-01 22:14:45,248 - FUNCflow - WARNING - iface h6-eth0 has no IPv4 address[0m
[95m2020-08-01 22:14:45,249 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:14:45,249 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:14:45,249 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
[2020-08-01 22:14:45.250264] [FUNCflow] [STEP]  1100.1: Add a flow with the VLAN tag as the only selector
2020-08-01 22:14:45,251 - FUNCflow - INFO - Add flow with port ingress 1 to port egress 2
[95m2020-08-01 22:14:45,252 - FUNCflow - DEBUG - Adding flow: {
    "deviceId": "of:0000000000000001",
    "isPermanent": "true",
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 3,
                "type": "IN_PORT"
            },
            {
                "ethType": "33024",
                "type": "ETH_TYPE"
            },
            {
                "type": "VLAN_VID",
                "vlanId": "10"
            }
        ]
    },
    "timeout": 0,
    "treatment": {
        "instructions": [
            {
                "port": 4,
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:14:45,252 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:14:45,252 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:14:45,253 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:14:45,253 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001 using POST method.
2020-08-01 22:14:45,277 - FUNCflow - INFO - ONOSrest1: Successfully POST flowin device: of:0000000000000001
2020-08-01 22:14:45,277 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:14:45,277 - FUNCflow - INFO - Successfully added flow
2020-08-01 22:14:45,277 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:14:55.288069] [FUNCflow] [STEP]  1100.2: Check flow is in the ADDED state
2020-08-01 22:14:55,289 - FUNCflow - INFO - Get the flows from ONOS
[93m2020-08-01 22:14:55,290 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:14:55,290 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:14:55,290 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:14:55,290 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
2020-08-01 22:14:55,313 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:14:55,313 - FUNCflow - INFO - All flows are in the ADDED state
2020-08-01 22:14:55,314 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:14:55.314256] [FUNCflow] [STEP]  1100.3: Check flows are in Mininet's flow table
2020-08-01 22:14:55,315 - FUNCflow - INFO - Getting the flow IDs from ONOS
2020-08-01 22:14:55,315 - FUNCflow - INFO - ONOS flow IDs: ['0xc000004b608fe6']
2020-08-01 22:14:55,316 - FUNCflow - INFO - Getting flows from Mininet
2020-08-01 22:14:55,316 - FUNCflow - INFO - Sending: sh ovs-ofctl dump-flows s1 -O OpenFlow13
2020-08-01 22:14:55,425 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:14:55,426 - FUNCflow - INFO - All flows are in mininet
2020-08-01 22:14:55,426 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:14:55.427267] [FUNCflow] [STEP]  1100.4: Send a packet to verify the flow are correct
2020-08-01 22:14:55,428 - FUNCflow - INFO - Starting filter on host2
2020-08-01 22:14:55,428 - FUNCflow - INFO - h4: Starting filter on interface h4-eth0.10
2020-08-01 22:14:55,531 - FUNCflow - INFO - h4: Starting filter on h4 > pkts = sniff(count = 1, filter = "", prn=lambda p: p.summary() )
2020-08-01 22:14:59,685 - FUNCflow - INFO - Broadcasting the packet with a vlan tag
[95m2020-08-01 22:14:59,686 - FUNCflow - DEBUG - h3: Sending Packet[0m
[95m2020-08-01 22:15:00,898 - FUNCflow - DEBUG - h3: Send packet response:  sendp( Ether()/Dot1Q(vlan=10), iface='h3-eth0.10', return_packets=True).summaary()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/usr/lib/python2.7/dist-packages/scapy/sendrecv.py", line 278, in sendp
    return __gen_send(conf.L2socket(iface=iface, *args, **kargs), x, inter=inter, loop=loop, count=count,
  File "/usr/lib/python2.7/dist-packages/scapy/arch/linux.py", line 432, in __init__
    set_promisc(self.ins, self.iface)
  File "/usr/lib/python2.7/dist-packages/scapy/arch/linux.py", line 160, in set_promisc
    mreq = struct.pack("IHH8s", get_if_index(iff), PACKET_MR_PROMISC, 0, "")
  File "/usr/lib/python2.7/dist-packages/scapy/arch/linux.py", line 292, in get_if_index
    return int(struct.unpack("I",get_if(iff, SIOCGIFINDEX)[16:20])[0])
  File "/usr/lib/python2.7/dist-packages/scapy/arch/common.py", line 19, in get_if
    ifreq = ioctl(sck, cmd, struct.pack("16s16x", iff))
IOError: [Errno 19] No such device
[0m
[91m2020-08-01 22:15:00,898 - FUNCflow - ERROR - h3: Error in sending command:  sendp( Ether()/Dot1Q(vlan=10), iface='h3-eth0.10', return_packets=True).summaary()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/usr/lib/python2.7/dist-packages/scapy/sendrecv.py", line 278, in sendp
    return __gen_send(conf.L2socket(iface=iface, *args, **kargs), x, inter=inter, loop=loop, count=count,
  File "/usr/lib/python2.7/dist-packages/scapy/arch/linux.py", line 432, in __init__
    set_promisc(self.ins, self.iface)
  File "/usr/lib/python2.7/dist-packages/scapy/arch/linux.py", line 160, in set_promisc
    mreq = struct.pack("IHH8s", get_if_index(iff), PACKET_MR_PROMISC, 0, "")
  File "/usr/lib/python2.7/dist-packages/scapy/arch/linux.py", line 292, in get_if_index
    return int(struct.unpack("I",get_if(iff, SIOCGIFINDEX)[16:20])[0])
  File "/usr/lib/python2.7/dist-packages/scapy/arch/common.py", line 19, in get_if
    ifreq = ioctl(sck, cmd, struct.pack("16s16x", iff))
IOError: [Errno 19] No such device
[0m
2020-08-01 22:15:00,899 - FUNCflow - INFO - Checking filter for our packet
[95m2020-08-01 22:15:00,899 - FUNCflow - DEBUG - h4: Checking Filter[0m
[95m2020-08-01 22:15:01,001 - FUNCflow - DEBUG - h4: cleanOutput:[0m
[95m2020-08-01 22:15:01,001 - FUNCflow - DEBUG - h4: ' \r\n>>>'[0m
[95m2020-08-01 22:15:01,002 - FUNCflow - DEBUG - h4: Reading Packets[0m
[95m2020-08-01 22:15:01,002 - FUNCflow - DEBUG - h4: Begin clear buffer[0m
[95m2020-08-01 22:15:02,003 - FUNCflow - DEBUG - h4: end clear buffer[0m
2020-08-01 22:15:03,120 - FUNCflow - INFO - Packet:  pkts.summary()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'pkts' is not defined

2020-08-01 22:15:03,121 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:15:03,121 - FUNCflow - INFO - Successfully sent a packet
2020-08-01 22:15:03,122 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase3000
******************************

[95m2020-08-01 22:15:03,124 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000][0m
[95m2020-08-01 22:15:03,124 - FUNCflow - DEBUG - Case to be executed : [1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:15:03.125424] [FUNCflow] [CASE]  Delete flows that were added through rest
[2020-08-01 22:15:03.127418] [FUNCflow] [STEP]  3000.1: Deleting flows
2020-08-01 22:15:03,128 - FUNCflow - INFO - Getting flows
[93m2020-08-01 22:15:03,129 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:15:03,129 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:15:03,129 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:15:03,129 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
[95m2020-08-01 22:15:03,148 - FUNCflow - DEBUG - Flow to be deleted:
{
    "appId": "org.onosproject.rest",
    "bytes": 0,
    "deviceId": "of:0000000000000001",
    "groupId": 0,
    "id": "54043196793065446",
    "isPermanent": true,
    "lastSeen": 1596320099702,
    "life": 14,
    "liveType": "UNKNOWN",
    "packets": 0,
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 3,
                "type": "IN_PORT"
            },
            {
                "ethType": "0x8100",
                "type": "ETH_TYPE"
            },
            {
                "type": "VLAN_VID",
                "vlanId": 10
            }
        ]
    },
    "state": "ADDED",
    "tableId": 0,
    "tableName": "0",
    "timeout": 0,
    "treatment": {
        "deferred": [],
        "instructions": [
            {
                "port": "4",
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:15:03,148 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:15:03,149 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:15:03,149 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:15:03,149 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001/54043196793065446 using DELETE method.
2020-08-01 22:15:03,165 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:15:03,165 - FUNCflow - INFO - Successfully deleting flows
2020-08-01 22:15:03,165 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase1200
******************************

[95m2020-08-01 22:15:13,178 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200][0m
[95m2020-08-01 22:15:13,178 - FUNCflow - DEBUG - Case to be executed : [3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:15:13.179229] [FUNCflow] [CASE]  Verify flow IP selectors are correctly compiled
[2020-08-01 22:15:13.181040] [FUNCflow] [STEP]  1200.1: Add flows with ARP addresses as the only selectors
[95m2020-08-01 22:15:13,182 - FUNCflow - DEBUG - h1: Stopping scapy[0m
[95m2020-08-01 22:15:13,316 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:15:15,386 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:15:15,386 - FUNCflow - DEBUG - 10.0.0.1[0m
[95m2020-08-01 22:15:15,386 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:15:15,386 - FUNCflow - DEBUG - h2: Stopping scapy[0m
[95m2020-08-01 22:15:15,514 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:15:17,604 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:15:17,604 - FUNCflow - DEBUG - 10.0.0.2[0m
[95m2020-08-01 22:15:17,604 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:15:17,604 - FUNCflow - DEBUG - h3: Stopping scapy[0m
[95m2020-08-01 22:15:17,759 - FUNCflow - DEBUG - h3: Starting scapy[0m
[93m2020-08-01 22:15:19,945 - FUNCflow - WARNING - iface h3-eth0 has no IPv4 address[0m
[95m2020-08-01 22:15:19,945 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:15:19,946 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:15:19,946 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:15:19,946 - FUNCflow - DEBUG - h4: Stopping scapy[0m
[95m2020-08-01 22:15:20,090 - FUNCflow - DEBUG - h4: Starting scapy[0m
[93m2020-08-01 22:15:22,234 - FUNCflow - WARNING - iface h4-eth0 has no IPv4 address[0m
[95m2020-08-01 22:15:22,234 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:15:22,234 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:15:22,234 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:15:22,234 - FUNCflow - DEBUG - h5: Stopping scapy[0m
[95m2020-08-01 22:15:22,367 - FUNCflow - DEBUG - h5: Starting scapy[0m
[93m2020-08-01 22:15:24,491 - FUNCflow - WARNING - iface h5-eth0 has no IPv4 address[0m
[95m2020-08-01 22:15:24,492 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:15:24,492 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:15:24,492 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:15:24,492 - FUNCflow - DEBUG - h6: Stopping scapy[0m
[95m2020-08-01 22:15:24,633 - FUNCflow - DEBUG - h6: Starting scapy[0m
[93m2020-08-01 22:15:26,841 - FUNCflow - WARNING - iface h6-eth0 has no IPv4 address[0m
[95m2020-08-01 22:15:26,842 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:15:26,842 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:15:26,842 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
2020-08-01 22:15:26,842 - FUNCflow - INFO - Add flow with port ingress 1 to port egress 2
[95m2020-08-01 22:15:26,843 - FUNCflow - DEBUG - Adding flow: {
    "deviceId": "of:0000000000000001",
    "isPermanent": "true",
    "priority": 40001,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "2054",
                "type": "ETH_TYPE"
            }
        ]
    },
    "timeout": 0,
    "treatment": {
        "instructions": [
            {
                "port": 2,
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:15:26,843 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:15:26,843 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:15:26,844 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:15:26,844 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001 using POST method.
2020-08-01 22:15:26,874 - FUNCflow - INFO - ONOSrest1: Successfully POST flowin device: of:0000000000000001
2020-08-01 22:15:26,875 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:15:26,875 - FUNCflow - INFO - Successfully added flows
2020-08-01 22:15:26,875 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:15:36.885996] [FUNCflow] [STEP]  1200.2: Check flow is in the ADDED state
2020-08-01 22:15:36,888 - FUNCflow - INFO - Get the flows from ONOS
[93m2020-08-01 22:15:36,888 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:15:36,888 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:15:36,888 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:15:36,888 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
2020-08-01 22:15:36,912 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:15:36,912 - FUNCflow - INFO - All flows are in the ADDED state
2020-08-01 22:15:36,912 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:15:36.913221] [FUNCflow] [STEP]  1200.3: Check flows are in Mininet's flow table
2020-08-01 22:15:36,914 - FUNCflow - INFO - Getting the flow IDs from ONOS
2020-08-01 22:15:36,914 - FUNCflow - INFO - ONOS flow IDs: ['0xc0000056b67a77']
2020-08-01 22:15:36,915 - FUNCflow - INFO - Getting flows from Mininet
2020-08-01 22:15:36,915 - FUNCflow - INFO - Sending: sh ovs-ofctl dump-flows s1 -O OpenFlow13
[93m2020-08-01 22:15:37,024 - FUNCflow - WARNING - Absent ids: ['0xc0000056b67a77'][0m
2020-08-01 22:15:37,025 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
[91m2020-08-01 22:15:37,025 - FUNCflow - ERROR - All flows are NOT in mininet[0m

[REPORT] [01 Aug 2020 22:15:37] All flows are NOT in mininet
[93m2020-08-01 22:15:37,025 - FUNCflow - WARNING - Assertion Failed[0m
[2020-08-01 22:15:37.026746] [FUNCflow] [STEP]  1200.4: Send a packet to verify the flow is correct
2020-08-01 22:15:37,028 - FUNCflow - INFO - Constructing packet
[95m2020-08-01 22:15:37,028 - FUNCflow - DEBUG - h1: Building Ethernet Frame[0m
[95m2020-08-01 22:15:37,233 - FUNCflow - DEBUG - h1: Building ARP Frame[0m
2020-08-01 22:15:37,438 - FUNCflow - INFO - Starting filter on host2
2020-08-01 22:15:37,439 - FUNCflow - INFO - h2: Starting filter on interface None
2020-08-01 22:15:37,541 - FUNCflow - INFO - h2: Starting filter on h2 > pkts = sniff(count = 1, filter = "arp", prn=lambda p: p.summary() )
2020-08-01 22:15:41,647 - FUNCflow - INFO - Sending packet to host2
[95m2020-08-01 22:15:41,647 - FUNCflow - DEBUG - h1: Sending Packet[0m
[95m2020-08-01 22:15:42,883 - FUNCflow - DEBUG - h1: Send packet response:  sendp( packet, return_packets=True).summary()
.
Sent 1 packets.
Ether / ARP who has 10.0.0.2 says 10.0.0.1
[0m
2020-08-01 22:15:42,884 - FUNCflow - INFO - Checking filter for our packet
[95m2020-08-01 22:15:42,884 - FUNCflow - DEBUG - h2: Checking Filter[0m
[95m2020-08-01 22:15:42,985 - FUNCflow - DEBUG - h2: cleanOutput:[0m
[95m2020-08-01 22:15:42,985 - FUNCflow - DEBUG - h2: ' pkts = sniff(count = 1, filter = "arp", prn=lambda p: p.summary() )\r\nEther / ARP who has 10.0.0.2 says 10.0.0.1\r\n>>>'[0m
[95m2020-08-01 22:15:42,986 - FUNCflow - DEBUG - h2: Reading Packets[0m
[95m2020-08-01 22:15:42,986 - FUNCflow - DEBUG - h2: Begin clear buffer[0m
[95m2020-08-01 22:15:43,988 - FUNCflow - DEBUG - h2: end clear buffer[0m
2020-08-01 22:15:45,092 - FUNCflow - INFO - Packet:  pkts.summary()
Ether / ARP who has 10.0.0.2 says 10.0.0.1

2020-08-01 22:15:45,093 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:15:45,093 - FUNCflow - INFO - Successfully sent a packet
2020-08-01 22:15:45,093 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Failed 
*****************************


******************************
 Result summary for Testcase3000
******************************

[95m2020-08-01 22:15:45,096 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000][0m
[95m2020-08-01 22:15:45,096 - FUNCflow - DEBUG - Case to be executed : [1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:15:45.097260] [FUNCflow] [CASE]  Delete flows that were added through rest
[2020-08-01 22:15:45.099141] [FUNCflow] [STEP]  3000.1: Deleting flows
2020-08-01 22:15:45,100 - FUNCflow - INFO - Getting flows
[93m2020-08-01 22:15:45,100 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:15:45,100 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:15:45,101 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:15:45,101 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
[95m2020-08-01 22:15:45,120 - FUNCflow - DEBUG - Flow to be deleted:
{
    "appId": "org.onosproject.rest",
    "bytes": 42,
    "deviceId": "of:0000000000000001",
    "groupId": 0,
    "id": "54043196983245431",
    "isPermanent": true,
    "lastSeen": 1596320144693,
    "life": 17,
    "liveType": "UNKNOWN",
    "packets": 1,
    "priority": 40001,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "0x806",
                "type": "ETH_TYPE"
            }
        ]
    },
    "state": "ADDED",
    "tableId": 0,
    "tableName": "0",
    "timeout": 0,
    "treatment": {
        "deferred": [],
        "instructions": [
            {
                "port": "2",
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:15:45,121 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:15:45,121 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:15:45,122 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:15:45,122 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001/54043196983245431 using DELETE method.
2020-08-01 22:15:45,139 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:15:45,139 - FUNCflow - INFO - Successfully deleting flows
2020-08-01 22:15:45,139 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase1300
******************************

[95m2020-08-01 22:15:55,143 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300][0m
[95m2020-08-01 22:15:55,143 - FUNCflow - DEBUG - Case to be executed : [3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:15:55.144304] [FUNCflow] [CASE]  Verify the MPLS selector is correctly compiled on the flow.
[2020-08-01 22:15:55.146276] [FUNCflow] [STEP]  1300.1: Add a flow with a MPLS selector
[95m2020-08-01 22:15:55,147 - FUNCflow - DEBUG - h1: Stopping scapy[0m
[95m2020-08-01 22:15:55,283 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:15:56,062 - FUNCflow - DEBUG - h1: Adding MPLS class[0m
[95m2020-08-01 22:15:56,063 - FUNCflow - DEBUG - h1: MPLS class path: /home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/[0m
[95m2020-08-01 22:15:56,063 - FUNCflow - DEBUG - h1: sending line: import imp[0m
[95m2020-08-01 22:15:56,165 - FUNCflow - DEBUG - h1: sending line: imp.load_source( "mplsClass", "/home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/mplsClass.py" )[0m
[95m2020-08-01 22:15:56,272 - FUNCflow - DEBUG - h1: sending line: from mplsClass import MPLS[0m
[95m2020-08-01 22:15:56,374 - FUNCflow - DEBUG - h1: sending line: bind_layers(Ether, MPLS, type = 0x8847)[0m
[95m2020-08-01 22:15:56,476 - FUNCflow - DEBUG - h1: sending line: bind_layers(MPLS, MPLS, bottom_of_label_stack = 0)[0m
[95m2020-08-01 22:15:56,579 - FUNCflow - DEBUG - h1: sending line: bind_layers(MPLS, IP)[0m
[95m2020-08-01 22:15:57,993 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:15:57,993 - FUNCflow - DEBUG - 10.0.0.1[0m
[95m2020-08-01 22:15:57,993 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:15:57,993 - FUNCflow - DEBUG - h2: Stopping scapy[0m
[95m2020-08-01 22:15:58,150 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:15:58,986 - FUNCflow - DEBUG - h2: Adding MPLS class[0m
[95m2020-08-01 22:15:58,986 - FUNCflow - DEBUG - h2: MPLS class path: /home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/[0m
[95m2020-08-01 22:15:58,986 - FUNCflow - DEBUG - h2: sending line: import imp[0m
[95m2020-08-01 22:15:59,089 - FUNCflow - DEBUG - h2: sending line: imp.load_source( "mplsClass", "/home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/mplsClass.py" )[0m
[95m2020-08-01 22:15:59,192 - FUNCflow - DEBUG - h2: sending line: from mplsClass import MPLS[0m
[95m2020-08-01 22:15:59,295 - FUNCflow - DEBUG - h2: sending line: bind_layers(Ether, MPLS, type = 0x8847)[0m
[95m2020-08-01 22:15:59,397 - FUNCflow - DEBUG - h2: sending line: bind_layers(MPLS, MPLS, bottom_of_label_stack = 0)[0m
[95m2020-08-01 22:15:59,499 - FUNCflow - DEBUG - h2: sending line: bind_layers(MPLS, IP)[0m
[95m2020-08-01 22:16:00,911 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:16:00,912 - FUNCflow - DEBUG - 10.0.0.2[0m
[95m2020-08-01 22:16:00,912 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:16:00,912 - FUNCflow - DEBUG - h3: Stopping scapy[0m
[95m2020-08-01 22:16:01,063 - FUNCflow - DEBUG - h3: Starting scapy[0m
[95m2020-08-01 22:16:01,812 - FUNCflow - DEBUG - h3: Adding MPLS class[0m
[95m2020-08-01 22:16:01,812 - FUNCflow - DEBUG - h3: MPLS class path: /home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/[0m
[95m2020-08-01 22:16:01,812 - FUNCflow - DEBUG - h3: sending line: import imp[0m
[95m2020-08-01 22:16:01,914 - FUNCflow - DEBUG - h3: sending line: imp.load_source( "mplsClass", "/home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/mplsClass.py" )[0m
[95m2020-08-01 22:16:02,017 - FUNCflow - DEBUG - h3: sending line: from mplsClass import MPLS[0m
[95m2020-08-01 22:16:02,119 - FUNCflow - DEBUG - h3: sending line: bind_layers(Ether, MPLS, type = 0x8847)[0m
[95m2020-08-01 22:16:02,222 - FUNCflow - DEBUG - h3: sending line: bind_layers(MPLS, MPLS, bottom_of_label_stack = 0)[0m
[95m2020-08-01 22:16:02,324 - FUNCflow - DEBUG - h3: sending line: bind_layers(MPLS, IP)[0m
[93m2020-08-01 22:16:03,734 - FUNCflow - WARNING - iface h3-eth0 has no IPv4 address[0m
[95m2020-08-01 22:16:03,735 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:16:03,735 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:16:03,735 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:16:03,735 - FUNCflow - DEBUG - h4: Stopping scapy[0m
[95m2020-08-01 22:16:03,881 - FUNCflow - DEBUG - h4: Starting scapy[0m
[95m2020-08-01 22:16:04,697 - FUNCflow - DEBUG - h4: Adding MPLS class[0m
[95m2020-08-01 22:16:04,698 - FUNCflow - DEBUG - h4: MPLS class path: /home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/[0m
[95m2020-08-01 22:16:04,698 - FUNCflow - DEBUG - h4: sending line: import imp[0m
[95m2020-08-01 22:16:04,800 - FUNCflow - DEBUG - h4: sending line: imp.load_source( "mplsClass", "/home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/mplsClass.py" )[0m
[95m2020-08-01 22:16:04,903 - FUNCflow - DEBUG - h4: sending line: from mplsClass import MPLS[0m
[95m2020-08-01 22:16:05,005 - FUNCflow - DEBUG - h4: sending line: bind_layers(Ether, MPLS, type = 0x8847)[0m
[95m2020-08-01 22:16:05,107 - FUNCflow - DEBUG - h4: sending line: bind_layers(MPLS, MPLS, bottom_of_label_stack = 0)[0m
[95m2020-08-01 22:16:05,210 - FUNCflow - DEBUG - h4: sending line: bind_layers(MPLS, IP)[0m
[93m2020-08-01 22:16:06,621 - FUNCflow - WARNING - iface h4-eth0 has no IPv4 address[0m
[95m2020-08-01 22:16:06,622 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:16:06,622 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:16:06,622 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:16:06,622 - FUNCflow - DEBUG - h5: Stopping scapy[0m
[95m2020-08-01 22:16:06,760 - FUNCflow - DEBUG - h5: Starting scapy[0m
[95m2020-08-01 22:16:07,522 - FUNCflow - DEBUG - h5: Adding MPLS class[0m
[95m2020-08-01 22:16:07,522 - FUNCflow - DEBUG - h5: MPLS class path: /home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/[0m
[95m2020-08-01 22:16:07,523 - FUNCflow - DEBUG - h5: sending line: import imp[0m
[95m2020-08-01 22:16:07,625 - FUNCflow - DEBUG - h5: sending line: imp.load_source( "mplsClass", "/home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/mplsClass.py" )[0m
[95m2020-08-01 22:16:07,727 - FUNCflow - DEBUG - h5: sending line: from mplsClass import MPLS[0m
[95m2020-08-01 22:16:07,830 - FUNCflow - DEBUG - h5: sending line: bind_layers(Ether, MPLS, type = 0x8847)[0m
[95m2020-08-01 22:16:07,932 - FUNCflow - DEBUG - h5: sending line: bind_layers(MPLS, MPLS, bottom_of_label_stack = 0)[0m
[95m2020-08-01 22:16:08,035 - FUNCflow - DEBUG - h5: sending line: bind_layers(MPLS, IP)[0m
[93m2020-08-01 22:16:09,446 - FUNCflow - WARNING - iface h5-eth0 has no IPv4 address[0m
[95m2020-08-01 22:16:09,446 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:16:09,446 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:16:09,446 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:16:09,446 - FUNCflow - DEBUG - h6: Stopping scapy[0m
[95m2020-08-01 22:16:09,599 - FUNCflow - DEBUG - h6: Starting scapy[0m
[95m2020-08-01 22:16:10,365 - FUNCflow - DEBUG - h6: Adding MPLS class[0m
[95m2020-08-01 22:16:10,366 - FUNCflow - DEBUG - h6: MPLS class path: /home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/[0m
[95m2020-08-01 22:16:10,366 - FUNCflow - DEBUG - h6: sending line: import imp[0m
[95m2020-08-01 22:16:10,468 - FUNCflow - DEBUG - h6: sending line: imp.load_source( "mplsClass", "/home/ubuntu/OnosSystemTest/TestON/tests/FUNC/FUNCflow/dependencies/mplsClass.py" )[0m
[95m2020-08-01 22:16:10,571 - FUNCflow - DEBUG - h6: sending line: from mplsClass import MPLS[0m
[95m2020-08-01 22:16:10,674 - FUNCflow - DEBUG - h6: sending line: bind_layers(Ether, MPLS, type = 0x8847)[0m
[95m2020-08-01 22:16:10,777 - FUNCflow - DEBUG - h6: sending line: bind_layers(MPLS, MPLS, bottom_of_label_stack = 0)[0m
[95m2020-08-01 22:16:10,879 - FUNCflow - DEBUG - h6: sending line: bind_layers(MPLS, IP)[0m
[93m2020-08-01 22:16:12,290 - FUNCflow - WARNING - iface h6-eth0 has no IPv4 address[0m
[95m2020-08-01 22:16:12,290 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:16:12,291 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:16:12,291 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
2020-08-01 22:16:12,291 - FUNCflow - INFO - Adding flow with MPLS selector
[95m2020-08-01 22:16:12,291 - FUNCflow - DEBUG - Adding flow: {
    "deviceId": "of:0000000000000001",
    "isPermanent": "true",
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "34887",
                "type": "ETH_TYPE"
            },
            {
                "label": "22",
                "type": "MPLS_LABEL"
            }
        ]
    },
    "timeout": 0,
    "treatment": {
        "instructions": [
            {
                "port": 2,
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:16:12,292 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:16:12,292 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:16:12,292 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:16:12,293 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001 using POST method.
2020-08-01 22:16:12,317 - FUNCflow - INFO - ONOSrest1: Successfully POST flowin device: of:0000000000000001
2020-08-01 22:16:12,318 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:16:12,318 - FUNCflow - INFO - Successfully added flow
2020-08-01 22:16:12,318 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:16:22.330027] [FUNCflow] [STEP]  1300.2: Check flow is in the ADDED state
2020-08-01 22:16:22,331 - FUNCflow - INFO - Get the flows from ONOS
[93m2020-08-01 22:16:22,331 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:16:22,331 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:16:22,332 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:16:22,332 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
2020-08-01 22:16:22,354 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:16:22,355 - FUNCflow - INFO - All flows are in the ADDED state
2020-08-01 22:16:22,355 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:16:22.355984] [FUNCflow] [STEP]  1300.3: Check flows are in Mininet's flow table
2020-08-01 22:16:22,357 - FUNCflow - INFO - Getting the flow IDs from ONOS
2020-08-01 22:16:22,357 - FUNCflow - INFO - ONOS flow IDs: ['0xc000004fac8b78']
2020-08-01 22:16:22,357 - FUNCflow - INFO - Getting flows from Mininet
2020-08-01 22:16:22,357 - FUNCflow - INFO - Sending: sh ovs-ofctl dump-flows s1 -O OpenFlow13
Flows:
[' cookie=0x100007a585b6f, duration=183.484s, table=0, n_packets=0, n_bytes=0, send_flow_rem priority=40000,dl_type=0x8942 actions=CONTROLLER:65535,clear_actions', ' cookie=0x10000ea6f4b8e, duration=183.484s, table=0, n_packets=1, n_bytes=42, send_flow_rem priority=40000,arp actions=CONTROLLER:65535,clear_actions', ' cookie=0xc000004fac8b78, duration=10.140s, table=0, n_packets=0, n_bytes=0, send_flow_rem priority=100,mpls,in_port="s1-eth1",mpls_label=22 actions=output:"s1-eth2"']


[95m2020-08-01 22:16:22,467 - FUNCflow - DEBUG - [94mJson flow:[0m
{'priority': '40000', 'n_packets': '0', 'flag': ['send_flow_rem'], 'cookie': '0x100007a585b6f', 'treatment': {'action': [{'CONTROLLER': '65535,clear_actions'}]}, 'n_bytes': '0', 'duration': '183.484s', 'table': '0', 'selector': {'criteria': [{'dl_type': '0x8942'}]}}
[0m
[95m2020-08-01 22:16:22,468 - FUNCflow - DEBUG - [94mJson flow:[0m
{'priority': '40000', 'n_packets': '1', 'flag': ['send_flow_rem'], 'cookie': '0x10000ea6f4b8e', 'treatment': {'action': [{'CONTROLLER': '65535,clear_actions'}]}, 'n_bytes': '42', 'duration': '183.484s', 'table': '0', 'selector': {'criteria': [{'type': 'arp'}]}}
[0m
[95m2020-08-01 22:16:22,468 - FUNCflow - DEBUG - [94mJson flow:[0m
{'priority': '100', 'n_packets': '0', 'flag': ['send_flow_rem'], 'cookie': '0xc000004fac8b78', 'treatment': {'action': [{'output': '"s1-eth2"'}]}, 'n_bytes': '0', 'duration': '10.140s', 'table': '0', 'selector': {'criteria': [{'in_port': '"s1-eth1"'}, {'mpls_label': '22'}, {'type': 'mpls'}]}}
[0m
flow ids:
['0xc000004fac8b78']


mn flow ids:
['0x100007a585b6f', '0x10000ea6f4b8e', '0xc000004fac8b78']


2020-08-01 22:16:22,468 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:16:22,468 - FUNCflow - INFO - All flows are in mininet
2020-08-01 22:16:22,469 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:16:22.469780] [FUNCflow] [STEP]  1300.4: Send a packet to verify the flow is correct
2020-08-01 22:16:22,471 - FUNCflow - INFO - Starting filter on host2
2020-08-01 22:16:22,471 - FUNCflow - INFO - h2: Starting filter on interface None
2020-08-01 22:16:22,573 - FUNCflow - INFO - h2: Starting filter on h2 > pkts = sniff(count = 1, filter = "mpls", prn=lambda p: p.summary() )
2020-08-01 22:16:26,679 - FUNCflow - INFO - Constructing packet
2020-08-01 22:16:26,679 - FUNCflow - INFO - Sending packet to host2
[95m2020-08-01 22:16:26,679 - FUNCflow - DEBUG - h1: Sending Packet[0m
[95m2020-08-01 22:16:27,929 - FUNCflow - DEBUG - h1: Send packet response:  sendp( Ether()/MPLS(label=22), return_packets=True).summary()
WARNING: Mac address to reach destination not found. Using broadcast.
.
Sent 1 packets.
WARNING: Mac address to reach destination not found. Using broadcast.
WARNING: more Mac address to reach destination not found. Using broadcast.
00:00:00:00:00:01 > ff:ff:ff:ff:ff:ff (0x8847) / MPLS
[0m
2020-08-01 22:16:27,930 - FUNCflow - INFO - Checking filter for our packet
[95m2020-08-01 22:16:27,930 - FUNCflow - DEBUG - h2: Checking Filter[0m
[95m2020-08-01 22:16:28,031 - FUNCflow - DEBUG - h2: cleanOutput:[0m
[95m2020-08-01 22:16:28,031 - FUNCflow - DEBUG - h2: ' pkts = sniff(count = 1, filter = "mpls", prn=lambda p: p.summary() )\r\n00:00:00:00:00:01 > ff:ff:ff:ff:ff:ff (0x8847) / MPLS\r\n>>>'[0m
[95m2020-08-01 22:16:28,031 - FUNCflow - DEBUG - h2: Reading Packets[0m
[95m2020-08-01 22:16:28,031 - FUNCflow - DEBUG - h2: Begin clear buffer[0m
[95m2020-08-01 22:16:29,034 - FUNCflow - DEBUG - h2: end clear buffer[0m
2020-08-01 22:16:30,138 - FUNCflow - INFO - Packet:  pkts.summary()
00:00:00:00:00:01 > ff:ff:ff:ff:ff:ff (0x8847) / MPLS

2020-08-01 22:16:30,139 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:16:30,139 - FUNCflow - INFO - Successfully sent a packet
2020-08-01 22:16:30,139 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase3000
******************************

[95m2020-08-01 22:16:30,142 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000][0m
[95m2020-08-01 22:16:30,142 - FUNCflow - DEBUG - Case to be executed : [1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:16:30.142451] [FUNCflow] [CASE]  Delete flows that were added through rest
[2020-08-01 22:16:30.144276] [FUNCflow] [STEP]  3000.1: Deleting flows
2020-08-01 22:16:30,145 - FUNCflow - INFO - Getting flows
[93m2020-08-01 22:16:30,145 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:16:30,145 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:16:30,146 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:16:30,146 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
[95m2020-08-01 22:16:30,164 - FUNCflow - DEBUG - Flow to be deleted:
{
    "appId": "org.onosproject.rest",
    "bytes": 18,
    "deviceId": "of:0000000000000001",
    "groupId": 0,
    "id": "54043196865153912",
    "isPermanent": true,
    "lastSeen": 1596320189693,
    "life": 17,
    "liveType": "UNKNOWN",
    "packets": 1,
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "0x8847",
                "type": "ETH_TYPE"
            },
            {
                "label": 22,
                "type": "MPLS_LABEL"
            }
        ]
    },
    "state": "ADDED",
    "tableId": 0,
    "tableName": "0",
    "timeout": 0,
    "treatment": {
        "deferred": [],
        "instructions": [
            {
                "port": "2",
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:16:30,164 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:16:30,164 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:16:30,164 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:16:30,165 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001/54043196865153912 using DELETE method.
2020-08-01 22:16:30,182 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:16:30,183 - FUNCflow - INFO - Successfully deleting flows
2020-08-01 22:16:30,183 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase1400
******************************

[95m2020-08-01 22:16:40,196 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400][0m
[95m2020-08-01 22:16:40,196 - FUNCflow - DEBUG - Case to be executed : [3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:16:40.196740] [FUNCflow] [CASE]  Verify flow IP selectors are correctly compiled
[2020-08-01 22:16:40.198762] [FUNCflow] [STEP]  1400.1: Add flows with IPv4 addresses as the only selectors
[95m2020-08-01 22:16:40,200 - FUNCflow - DEBUG - h1: Stopping scapy[0m
[95m2020-08-01 22:16:40,353 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:16:42,518 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:16:42,518 - FUNCflow - DEBUG - 10.0.0.1[0m
[95m2020-08-01 22:16:42,519 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:16:42,519 - FUNCflow - DEBUG - h2: Stopping scapy[0m
[95m2020-08-01 22:16:42,662 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:16:44,738 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:16:44,738 - FUNCflow - DEBUG - 10.0.0.2[0m
[95m2020-08-01 22:16:44,739 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:16:44,739 - FUNCflow - DEBUG - h3: Stopping scapy[0m
[95m2020-08-01 22:16:44,868 - FUNCflow - DEBUG - h3: Starting scapy[0m
[93m2020-08-01 22:16:46,927 - FUNCflow - WARNING - iface h3-eth0 has no IPv4 address[0m
[95m2020-08-01 22:16:46,927 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:16:46,928 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:16:46,928 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:16:46,928 - FUNCflow - DEBUG - h4: Stopping scapy[0m
[95m2020-08-01 22:16:47,071 - FUNCflow - DEBUG - h4: Starting scapy[0m
[93m2020-08-01 22:16:49,234 - FUNCflow - WARNING - iface h4-eth0 has no IPv4 address[0m
[95m2020-08-01 22:16:49,234 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:16:49,234 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:16:49,234 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:16:49,235 - FUNCflow - DEBUG - h5: Stopping scapy[0m
[95m2020-08-01 22:16:49,372 - FUNCflow - DEBUG - h5: Starting scapy[0m
[93m2020-08-01 22:16:51,519 - FUNCflow - WARNING - iface h5-eth0 has no IPv4 address[0m
[95m2020-08-01 22:16:51,519 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:16:51,519 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:16:51,519 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:16:51,519 - FUNCflow - DEBUG - h6: Stopping scapy[0m
[95m2020-08-01 22:16:51,666 - FUNCflow - DEBUG - h6: Starting scapy[0m
[93m2020-08-01 22:16:53,827 - FUNCflow - WARNING - iface h6-eth0 has no IPv4 address[0m
[95m2020-08-01 22:16:53,828 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:16:53,828 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:16:53,828 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
2020-08-01 22:16:53,828 - FUNCflow - INFO - Add flow with port ingress 1 to port egress 2
[95m2020-08-01 22:16:53,829 - FUNCflow - DEBUG - Adding flow: {
    "deviceId": "of:0000000000000001",
    "isPermanent": "true",
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "2048",
                "type": "ETH_TYPE"
            },
            {
                "ip": "10.0.0.1/32",
                "type": "IPV4_SRC"
            },
            {
                "ip": "10.0.0.2/32",
                "type": "IPV4_DST"
            }
        ]
    },
    "timeout": 0,
    "treatment": {
        "instructions": [
            {
                "port": 2,
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:16:53,829 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:16:53,829 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:16:53,830 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:16:53,830 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001 using POST method.
2020-08-01 22:16:53,852 - FUNCflow - INFO - ONOSrest1: Successfully POST flowin device: of:0000000000000001
2020-08-01 22:16:53,853 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:16:53,853 - FUNCflow - INFO - Successfully added flows
2020-08-01 22:16:53,853 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:17:03.864111] [FUNCflow] [STEP]  1400.2: Check flow is in the ADDED state
2020-08-01 22:17:03,865 - FUNCflow - INFO - Get the flows from ONOS
[93m2020-08-01 22:17:03,866 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:17:03,866 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:17:03,866 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:17:03,866 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
2020-08-01 22:17:03,886 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:17:03,886 - FUNCflow - INFO - All flows are in the ADDED state
2020-08-01 22:17:03,886 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:17:03.886878] [FUNCflow] [STEP]  1400.3: Check flows are in Mininet's flow table
2020-08-01 22:17:03,888 - FUNCflow - INFO - Getting the flow IDs from ONOS
2020-08-01 22:17:03,888 - FUNCflow - INFO - ONOS flow IDs: ['0xc000009fa4f8e0']
2020-08-01 22:17:03,888 - FUNCflow - INFO - Getting flows from Mininet
2020-08-01 22:17:03,888 - FUNCflow - INFO - Sending: sh ovs-ofctl dump-flows s1 -O OpenFlow13
2020-08-01 22:17:04,001 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:17:04,001 - FUNCflow - INFO - All flows are in mininet
2020-08-01 22:17:04,001 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:17:04.002628] [FUNCflow] [STEP]  1400.4: Send a packet to verify the flow is correct
2020-08-01 22:17:04,004 - FUNCflow - INFO - Constructing packet
[95m2020-08-01 22:17:04,004 - FUNCflow - DEBUG - h1: Building Ethernet Frame[0m
[95m2020-08-01 22:17:04,208 - FUNCflow - DEBUG - h1: Building IP Frame[0m
2020-08-01 22:17:04,413 - FUNCflow - INFO - Starting filter on host2
2020-08-01 22:17:04,413 - FUNCflow - INFO - h2: Starting filter on interface None
2020-08-01 22:17:04,515 - FUNCflow - INFO - h2: Starting filter on h2 > pkts = sniff(count = 1, filter = "ip", prn=lambda p: p.summary() )
2020-08-01 22:17:08,621 - FUNCflow - INFO - Sending packet to host2
[95m2020-08-01 22:17:08,622 - FUNCflow - DEBUG - h1: Sending Packet[0m
[95m2020-08-01 22:17:09,879 - FUNCflow - DEBUG - h1: Send packet response:  sendp( packet, return_packets=True).summary()
.
Sent 1 packets.
Ether / 10.0.0.1 > 10.0.0.2 hopopt
[0m
2020-08-01 22:17:09,880 - FUNCflow - INFO - Checking filter for our packet
[95m2020-08-01 22:17:09,880 - FUNCflow - DEBUG - h2: Checking Filter[0m
[95m2020-08-01 22:17:09,981 - FUNCflow - DEBUG - h2: cleanOutput:[0m
[95m2020-08-01 22:17:09,981 - FUNCflow - DEBUG - h2: ' pkts = sniff(count = 1, filter = "ip", prn=lambda p: p.summary() )\r\nEther / 10.0.0.1 > 10.0.0.2 hopopt\r\n>>>'[0m
[95m2020-08-01 22:17:09,982 - FUNCflow - DEBUG - h2: Reading Packets[0m
[95m2020-08-01 22:17:09,982 - FUNCflow - DEBUG - h2: Begin clear buffer[0m
[95m2020-08-01 22:17:10,984 - FUNCflow - DEBUG - h2: end clear buffer[0m
2020-08-01 22:17:12,088 - FUNCflow - INFO - Packet:  pkts.summary()
Ether / 10.0.0.1 > 10.0.0.2 hopopt

2020-08-01 22:17:12,089 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:17:12,089 - FUNCflow - INFO - Successfully sent a packet
2020-08-01 22:17:12,089 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase3000
******************************

[95m2020-08-01 22:17:12,092 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000][0m
[95m2020-08-01 22:17:12,092 - FUNCflow - DEBUG - Case to be executed : [1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:17:12.092696] [FUNCflow] [CASE]  Delete flows that were added through rest
[2020-08-01 22:17:12.094609] [FUNCflow] [STEP]  3000.1: Deleting flows
2020-08-01 22:17:12,095 - FUNCflow - INFO - Getting flows
[93m2020-08-01 22:17:12,096 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:17:12,096 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:17:12,096 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:17:12,096 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
[95m2020-08-01 22:17:12,116 - FUNCflow - DEBUG - Flow to be deleted:
{
    "appId": "org.onosproject.rest",
    "bytes": 0,
    "deviceId": "of:0000000000000001",
    "groupId": 0,
    "id": "54043198206834912",
    "isPermanent": true,
    "lastSeen": 1596320229693,
    "life": 15,
    "liveType": "UNKNOWN",
    "packets": 0,
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "0x800",
                "type": "ETH_TYPE"
            },
            {
                "ip": "10.0.0.1/32",
                "type": "IPV4_SRC"
            },
            {
                "ip": "10.0.0.2/32",
                "type": "IPV4_DST"
            }
        ]
    },
    "state": "ADDED",
    "tableId": 0,
    "tableName": "0",
    "timeout": 0,
    "treatment": {
        "deferred": [],
        "instructions": [
            {
                "port": "2",
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:17:12,117 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:17:12,117 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:17:12,117 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:17:12,118 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001/54043198206834912 using DELETE method.
2020-08-01 22:17:12,133 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:17:12,134 - FUNCflow - INFO - Successfully deleting flows
2020-08-01 22:17:12,134 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase1500
******************************

[95m2020-08-01 22:17:22,146 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500][0m
[95m2020-08-01 22:17:22,146 - FUNCflow - DEBUG - Case to be executed : [3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:17:22.146528] [FUNCflow] [CASE]  Verify IPv6 selector is correctly compiled
[2020-08-01 22:17:22.147486] [FUNCflow] [STEP]  1500.1: Add flows with IPv6 addresses as the only selectors
[95m2020-08-01 22:17:22,148 - FUNCflow - DEBUG - h1: Stopping scapy[0m
[95m2020-08-01 22:17:22,290 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:17:24,414 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:17:24,415 - FUNCflow - DEBUG - ::[0m
[95m2020-08-01 22:17:24,415 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:17:24,415 - FUNCflow - DEBUG - h2: Stopping scapy[0m
[95m2020-08-01 22:17:24,559 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:17:26,752 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:17:26,752 - FUNCflow - DEBUG - ::[0m
[95m2020-08-01 22:17:26,752 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:17:26,752 - FUNCflow - DEBUG - h3: Stopping scapy[0m
[95m2020-08-01 22:17:26,894 - FUNCflow - DEBUG - h3: Starting scapy[0m
[95m2020-08-01 22:17:29,082 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:17:29,082 - FUNCflow - DEBUG - ::[0m
[95m2020-08-01 22:17:29,082 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:17:29,082 - FUNCflow - DEBUG - h4: Stopping scapy[0m
[95m2020-08-01 22:17:29,218 - FUNCflow - DEBUG - h4: Starting scapy[0m
[95m2020-08-01 22:17:31,315 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:17:31,316 - FUNCflow - DEBUG - ::[0m
[95m2020-08-01 22:17:31,316 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:17:31,316 - FUNCflow - DEBUG - h5: Stopping scapy[0m
[95m2020-08-01 22:17:31,452 - FUNCflow - DEBUG - h5: Starting scapy[0m
[95m2020-08-01 22:17:33,570 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:17:33,570 - FUNCflow - DEBUG - 1000:0000:0000:0000:0000:0000:0000:0005[0m
[95m2020-08-01 22:17:33,570 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:17:33,570 - FUNCflow - DEBUG - h6: Stopping scapy[0m
[95m2020-08-01 22:17:33,715 - FUNCflow - DEBUG - h6: Starting scapy[0m
[95m2020-08-01 22:17:35,908 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:17:35,908 - FUNCflow - DEBUG - 1000:0000:0000:0000:0000:0000:0000:0006[0m
[95m2020-08-01 22:17:35,908 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
2020-08-01 22:17:35,908 - FUNCflow - INFO - Add flow with port ingress 5 to port egress 6
[95m2020-08-01 22:17:35,909 - FUNCflow - DEBUG - Adding flow: {
    "deviceId": "of:0000000000000001",
    "isPermanent": "true",
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 5,
                "type": "IN_PORT"
            },
            {
                "ethType": "34525",
                "type": "ETH_TYPE"
            },
            {
                "ip": "1000:0000:0000:0000:0000:0000:0000:0005/128",
                "type": "IPV6_SRC"
            },
            {
                "ip": "1000:0000:0000:0000:0000:0000:0000:0006/128",
                "type": "IPV6_DST"
            }
        ]
    },
    "timeout": 0,
    "treatment": {
        "instructions": [
            {
                "port": 6,
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:17:35,910 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:17:35,910 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:17:35,910 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:17:35,910 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001 using POST method.
2020-08-01 22:17:35,928 - FUNCflow - INFO - ONOSrest1: Successfully POST flowin device: of:0000000000000001
2020-08-01 22:17:35,929 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:17:35,929 - FUNCflow - INFO - Successfully added flows
2020-08-01 22:17:35,929 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:17:45.940203] [FUNCflow] [STEP]  1500.2: Check flow is in the ADDED state
2020-08-01 22:17:45,941 - FUNCflow - INFO - Get the flows from ONOS
[93m2020-08-01 22:17:45,942 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:17:45,942 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:17:45,942 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:17:45,942 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
2020-08-01 22:17:45,960 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:17:45,960 - FUNCflow - INFO - All flows are in the ADDED state
2020-08-01 22:17:45,960 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:17:45.960972] [FUNCflow] [STEP]  1500.3: Check flows are in Mininet's flow table
2020-08-01 22:17:45,962 - FUNCflow - INFO - Getting the flow IDs from ONOS
2020-08-01 22:17:45,962 - FUNCflow - INFO - ONOS flow IDs: ['0xc000003647a063']
2020-08-01 22:17:45,962 - FUNCflow - INFO - Getting flows from Mininet
2020-08-01 22:17:45,962 - FUNCflow - INFO - Sending: sh ovs-ofctl dump-flows s1 -O OpenFlow13
2020-08-01 22:17:46,072 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:17:46,073 - FUNCflow - INFO - All flows are in mininet
2020-08-01 22:17:46,073 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:17:46.074307] [FUNCflow] [STEP]  1500.4: Send a packet to verify the flow is correct
2020-08-01 22:17:46,075 - FUNCflow - INFO - Constructing packet
[95m2020-08-01 22:17:46,076 - FUNCflow - DEBUG - h5: Building Ethernet Frame[0m
[95m2020-08-01 22:17:46,280 - FUNCflow - DEBUG - h5: Building IPv6 Frame[0m
2020-08-01 22:17:46,485 - FUNCflow - INFO - Starting filter on host6
2020-08-01 22:17:46,486 - FUNCflow - INFO - h6: Starting filter on interface None
2020-08-01 22:17:46,589 - FUNCflow - INFO - h6: Starting filter on h6 > pkts = sniff(count = 1, filter = "ip6", prn=lambda p: p.summary() )
2020-08-01 22:17:50,696 - FUNCflow - INFO - Sending packet to host6
[95m2020-08-01 22:17:50,696 - FUNCflow - DEBUG - h5: Sending Packet[0m
[95m2020-08-01 22:17:51,943 - FUNCflow - DEBUG - h5: Send packet response:  sendp( packet, return_packets=True).summary()
WARNING: No route found for IPv6 destination 1000::6 (no default route?)
.
Sent 1 packets.
Ether / 1000::5 > 1000::6 (59)
[0m
2020-08-01 22:17:51,943 - FUNCflow - INFO - Checking filter for our packet
[95m2020-08-01 22:17:51,944 - FUNCflow - DEBUG - h6: Checking Filter[0m
[95m2020-08-01 22:17:52,045 - FUNCflow - DEBUG - h6: cleanOutput:[0m
[95m2020-08-01 22:17:52,045 - FUNCflow - DEBUG - h6: ' pkts = sniff(count = 1, filter = "ip6", prn=lambda p: p.summary() )\r\nEther / 1000::5 > 1000::6 (59)\r\n>>>'[0m
[95m2020-08-01 22:17:52,045 - FUNCflow - DEBUG - h6: Reading Packets[0m
[95m2020-08-01 22:17:52,046 - FUNCflow - DEBUG - h6: Begin clear buffer[0m
[95m2020-08-01 22:17:53,048 - FUNCflow - DEBUG - h6: end clear buffer[0m
2020-08-01 22:17:54,153 - FUNCflow - INFO - Packet:  pkts.summary()
Ether / 1000::5 > 1000::6 (59)

2020-08-01 22:17:54,154 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:17:54,155 - FUNCflow - INFO - Successfully sent a packet
2020-08-01 22:17:54,155 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase3000
******************************

[95m2020-08-01 22:17:54,158 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000][0m
[95m2020-08-01 22:17:54,158 - FUNCflow - DEBUG - Case to be executed : [1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:17:54.158993] [FUNCflow] [CASE]  Delete flows that were added through rest
[2020-08-01 22:17:54.160561] [FUNCflow] [STEP]  3000.1: Deleting flows
2020-08-01 22:17:54,161 - FUNCflow - INFO - Getting flows
[93m2020-08-01 22:17:54,161 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:17:54,161 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:17:54,161 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:17:54,161 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
[95m2020-08-01 22:17:54,182 - FUNCflow - DEBUG - Flow to be deleted:
{
    "appId": "org.onosproject.rest",
    "bytes": 0,
    "deviceId": "of:0000000000000001",
    "groupId": 0,
    "id": "54043196439109731",
    "isPermanent": true,
    "lastSeen": 1596320269694,
    "life": 13,
    "liveType": "UNKNOWN",
    "packets": 0,
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 5,
                "type": "IN_PORT"
            },
            {
                "ethType": "0x86dd",
                "type": "ETH_TYPE"
            },
            {
                "ip": "1000::5/128",
                "type": "IPV6_SRC"
            },
            {
                "ip": "1000::6/128",
                "type": "IPV6_DST"
            }
        ]
    },
    "state": "ADDED",
    "tableId": 0,
    "tableName": "0",
    "timeout": 0,
    "treatment": {
        "deferred": [],
        "instructions": [
            {
                "port": "6",
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:17:54,183 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:17:54,183 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:17:54,183 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:17:54,183 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001/54043196439109731 using DELETE method.
2020-08-01 22:17:54,194 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:17:54,195 - FUNCflow - INFO - Successfully deleting flows
2020-08-01 22:17:54,195 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase1600
******************************

[95m2020-08-01 22:18:04,208 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600][0m
[95m2020-08-01 22:18:04,208 - FUNCflow - DEBUG - Case to be executed : [3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:18:04.208941] [FUNCflow] [CASE]  Verify the UDP selector is correctly compiled on the flow
[2020-08-01 22:18:04.210963] [FUNCflow] [STEP]  1600.1: Add a flow with a UDP selector
[95m2020-08-01 22:18:04,212 - FUNCflow - DEBUG - h1: Stopping scapy[0m
[95m2020-08-01 22:18:04,350 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:18:06,448 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:18:06,449 - FUNCflow - DEBUG - 10.0.0.1[0m
[95m2020-08-01 22:18:06,449 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:18:06,449 - FUNCflow - DEBUG - h2: Stopping scapy[0m
[95m2020-08-01 22:18:06,600 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:18:08,754 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:18:08,754 - FUNCflow - DEBUG - 10.0.0.2[0m
[95m2020-08-01 22:18:08,755 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:18:08,755 - FUNCflow - DEBUG - h3: Stopping scapy[0m
[95m2020-08-01 22:18:08,909 - FUNCflow - DEBUG - h3: Starting scapy[0m
[93m2020-08-01 22:18:10,968 - FUNCflow - WARNING - iface h3-eth0 has no IPv4 address[0m
[95m2020-08-01 22:18:10,969 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:18:10,969 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:18:10,969 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:18:10,969 - FUNCflow - DEBUG - h4: Stopping scapy[0m
[95m2020-08-01 22:18:11,122 - FUNCflow - DEBUG - h4: Starting scapy[0m
[93m2020-08-01 22:18:13,170 - FUNCflow - WARNING - iface h4-eth0 has no IPv4 address[0m
[95m2020-08-01 22:18:13,170 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:18:13,171 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:18:13,171 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:18:13,171 - FUNCflow - DEBUG - h5: Stopping scapy[0m
[95m2020-08-01 22:18:13,319 - FUNCflow - DEBUG - h5: Starting scapy[0m
[93m2020-08-01 22:18:15,419 - FUNCflow - WARNING - iface h5-eth0 has no IPv4 address[0m
[95m2020-08-01 22:18:15,419 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:18:15,420 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:18:15,420 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:18:15,420 - FUNCflow - DEBUG - h6: Stopping scapy[0m
[95m2020-08-01 22:18:15,576 - FUNCflow - DEBUG - h6: Starting scapy[0m
[93m2020-08-01 22:18:17,629 - FUNCflow - WARNING - iface h6-eth0 has no IPv4 address[0m
[95m2020-08-01 22:18:17,630 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:18:17,630 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:18:17,630 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
2020-08-01 22:18:17,630 - FUNCflow - INFO - Add a flow that connects host1 on port1 to host2 on port2
[95m2020-08-01 22:18:17,631 - FUNCflow - DEBUG - Adding flow: {
    "deviceId": "of:0000000000000001",
    "isPermanent": "true",
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "2048",
                "type": "ETH_TYPE"
            },
            {
                "type": "UDP_DST",
                "udpPort": "40051"
            },
            {
                "protocol": "17",
                "type": "IP_PROTO"
            }
        ]
    },
    "timeout": 0,
    "treatment": {
        "instructions": [
            {
                "port": 2,
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:18:17,631 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:18:17,632 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:18:17,632 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:18:17,632 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001 using POST method.
2020-08-01 22:18:17,653 - FUNCflow - INFO - ONOSrest1: Successfully POST flowin device: of:0000000000000001
2020-08-01 22:18:17,654 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:18:17,654 - FUNCflow - INFO - Successfully added flows
2020-08-01 22:18:17,655 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:18:27.665549] [FUNCflow] [STEP]  1600.2: Check flow is in the ADDED state
2020-08-01 22:18:27,667 - FUNCflow - INFO - Get the flows from ONOS
[93m2020-08-01 22:18:27,667 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:18:27,667 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:18:27,667 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:18:27,667 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
2020-08-01 22:18:27,692 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:18:27,692 - FUNCflow - INFO - All flows are in the ADDED state
2020-08-01 22:18:27,692 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:18:27.693222] [FUNCflow] [STEP]  1600.3: Check flows are in Mininet's flow table
2020-08-01 22:18:27,694 - FUNCflow - INFO - Getting the flow IDs from ONOS
2020-08-01 22:18:27,694 - FUNCflow - INFO - ONOS flow IDs: ['0xc000009d4a5f9e']
2020-08-01 22:18:27,694 - FUNCflow - INFO - Getting flows from Mininet
2020-08-01 22:18:27,695 - FUNCflow - INFO - Sending: sh ovs-ofctl dump-flows s1 -O OpenFlow13
2020-08-01 22:18:27,806 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:18:27,807 - FUNCflow - INFO - All flows are in mininet
2020-08-01 22:18:27,807 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:18:27.808002] [FUNCflow] [STEP]  1600.4: Send a packet to verify the flow is correct
2020-08-01 22:18:27,809 - FUNCflow - INFO - Constructing packet
[95m2020-08-01 22:18:27,809 - FUNCflow - DEBUG - h1: Building Ethernet Frame[0m
[95m2020-08-01 22:18:28,013 - FUNCflow - DEBUG - h1: Building IP Frame[0m
[95m2020-08-01 22:18:28,219 - FUNCflow - DEBUG - h1: Building UDP Frame[0m
2020-08-01 22:18:28,423 - FUNCflow - INFO - Starting filter on host2
2020-08-01 22:18:28,424 - FUNCflow - INFO - h2: Starting filter on interface None
2020-08-01 22:18:28,526 - FUNCflow - INFO - h2: Starting filter on h2 > pkts = sniff(count = 1, filter = "udp", prn=lambda p: p.summary() )
2020-08-01 22:18:32,632 - FUNCflow - INFO - Sending packet to host2
[95m2020-08-01 22:18:32,632 - FUNCflow - DEBUG - h1: Sending Packet[0m
[95m2020-08-01 22:18:33,875 - FUNCflow - DEBUG - h1: Send packet response:  sendp( packet, return_packets=True).summary()
.
Sent 1 packets.
Ether / IP / UDP 10.0.0.1:domain > 10.0.0.2:40051
[0m
2020-08-01 22:18:33,876 - FUNCflow - INFO - Checking filter for our packet
[95m2020-08-01 22:18:33,876 - FUNCflow - DEBUG - h2: Checking Filter[0m
[95m2020-08-01 22:18:33,977 - FUNCflow - DEBUG - h2: cleanOutput:[0m
[95m2020-08-01 22:18:33,977 - FUNCflow - DEBUG - h2: ' pkts = sniff(count = 1, filter = "udp", prn=lambda p: p.summary() )\r\nEther / IP / UDP 10.0.0.1:domain > 10.0.0.2:40051\r\n>>>'[0m
[95m2020-08-01 22:18:33,977 - FUNCflow - DEBUG - h2: Reading Packets[0m
[95m2020-08-01 22:18:33,978 - FUNCflow - DEBUG - h2: Begin clear buffer[0m
[95m2020-08-01 22:18:34,980 - FUNCflow - DEBUG - h2: end clear buffer[0m
2020-08-01 22:18:36,084 - FUNCflow - INFO - Packet:  pkts.summary()
Ether / IP / UDP 10.0.0.1:domain > 10.0.0.2:40051

2020-08-01 22:18:36,085 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:18:36,085 - FUNCflow - INFO - Successfully sent a packet
2020-08-01 22:18:36,085 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase3000
******************************

[95m2020-08-01 22:18:36,088 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000][0m
[95m2020-08-01 22:18:36,088 - FUNCflow - DEBUG - Case to be executed : [1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:18:36.088696] [FUNCflow] [CASE]  Delete flows that were added through rest
[2020-08-01 22:18:36.090641] [FUNCflow] [STEP]  3000.1: Deleting flows
2020-08-01 22:18:36,091 - FUNCflow - INFO - Getting flows
[93m2020-08-01 22:18:36,092 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:18:36,092 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:18:36,092 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:18:36,092 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
[95m2020-08-01 22:18:36,110 - FUNCflow - DEBUG - Flow to be deleted:
{
    "appId": "org.onosproject.rest",
    "bytes": 42,
    "deviceId": "of:0000000000000001",
    "groupId": 0,
    "id": "54043198167343006",
    "isPermanent": true,
    "lastSeen": 1596320314693,
    "life": 17,
    "liveType": "UNKNOWN",
    "packets": 1,
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "0x800",
                "type": "ETH_TYPE"
            },
            {
                "protocol": 17,
                "type": "IP_PROTO"
            },
            {
                "type": "UDP_DST",
                "udpPort": 40051
            }
        ]
    },
    "state": "ADDED",
    "tableId": 0,
    "tableName": "0",
    "timeout": 0,
    "treatment": {
        "deferred": [],
        "instructions": [
            {
                "port": "2",
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:18:36,111 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:18:36,111 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:18:36,111 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:18:36,111 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001/54043198167343006 using DELETE method.
2020-08-01 22:18:36,126 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:18:36,126 - FUNCflow - INFO - Successfully deleting flows
2020-08-01 22:18:36,126 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase1700
******************************

[95m2020-08-01 22:18:46,139 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700][0m
[95m2020-08-01 22:18:46,139 - FUNCflow - DEBUG - Case to be executed : [3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:18:46.140034] [FUNCflow] [CASE]  Verify the TCP selector is correctly compiled on the flow
[2020-08-01 22:18:46.141967] [FUNCflow] [STEP]  1700.1: Add a flow with a TCP selector
[95m2020-08-01 22:18:46,143 - FUNCflow - DEBUG - h1: Stopping scapy[0m
[95m2020-08-01 22:18:46,270 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:18:48,364 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:18:48,364 - FUNCflow - DEBUG - 10.0.0.1[0m
[95m2020-08-01 22:18:48,364 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:18:48,364 - FUNCflow - DEBUG - h2: Stopping scapy[0m
[95m2020-08-01 22:18:48,494 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:18:50,590 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:18:50,590 - FUNCflow - DEBUG - 10.0.0.2[0m
[95m2020-08-01 22:18:50,590 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:18:50,590 - FUNCflow - DEBUG - h3: Stopping scapy[0m
[95m2020-08-01 22:18:50,729 - FUNCflow - DEBUG - h3: Starting scapy[0m
[93m2020-08-01 22:18:52,818 - FUNCflow - WARNING - iface h3-eth0 has no IPv4 address[0m
[95m2020-08-01 22:18:52,818 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:18:52,818 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:18:52,818 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:18:52,818 - FUNCflow - DEBUG - h4: Stopping scapy[0m
[95m2020-08-01 22:18:52,959 - FUNCflow - DEBUG - h4: Starting scapy[0m
[93m2020-08-01 22:18:55,047 - FUNCflow - WARNING - iface h4-eth0 has no IPv4 address[0m
[95m2020-08-01 22:18:55,047 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:18:55,047 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:18:55,047 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:18:55,047 - FUNCflow - DEBUG - h5: Stopping scapy[0m
[95m2020-08-01 22:18:55,185 - FUNCflow - DEBUG - h5: Starting scapy[0m
[93m2020-08-01 22:18:57,336 - FUNCflow - WARNING - iface h5-eth0 has no IPv4 address[0m
[95m2020-08-01 22:18:57,337 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:18:57,337 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:18:57,337 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:18:57,337 - FUNCflow - DEBUG - h6: Stopping scapy[0m
[95m2020-08-01 22:18:57,475 - FUNCflow - DEBUG - h6: Starting scapy[0m
[93m2020-08-01 22:18:59,596 - FUNCflow - WARNING - iface h6-eth0 has no IPv4 address[0m
[95m2020-08-01 22:18:59,596 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:18:59,597 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:18:59,597 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
2020-08-01 22:18:59,597 - FUNCflow - INFO - Add a flow that connects host1 on port1 to host2 on port2
[95m2020-08-01 22:18:59,597 - FUNCflow - DEBUG - Adding flow: {
    "deviceId": "of:0000000000000001",
    "isPermanent": "true",
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "2048",
                "type": "ETH_TYPE"
            },
            {
                "tcpPort": "40001",
                "type": "TCP_DST"
            },
            {
                "protocol": "6",
                "type": "IP_PROTO"
            }
        ]
    },
    "timeout": 0,
    "treatment": {
        "instructions": [
            {
                "port": 2,
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:18:59,598 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:18:59,598 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:18:59,598 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:18:59,599 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001 using POST method.
2020-08-01 22:18:59,627 - FUNCflow - INFO - ONOSrest1: Successfully POST flowin device: of:0000000000000001
2020-08-01 22:18:59,628 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:18:59,628 - FUNCflow - INFO - Successfully added flows
2020-08-01 22:18:59,628 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:19:09.639020] [FUNCflow] [STEP]  1700.2: Check flow is in the ADDED state
2020-08-01 22:19:09,640 - FUNCflow - INFO - Get the flows from ONOS
[93m2020-08-01 22:19:09,641 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:19:09,641 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:19:09,641 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:19:09,641 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
2020-08-01 22:19:09,664 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:19:09,664 - FUNCflow - INFO - All flows are in the ADDED state
2020-08-01 22:19:09,664 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:19:09.664855] [FUNCflow] [STEP]  1700.3: Check flows are in Mininet's flow table
2020-08-01 22:19:09,666 - FUNCflow - INFO - Getting the flow IDs from ONOS
2020-08-01 22:19:09,666 - FUNCflow - INFO - ONOS flow IDs: ['0xc000007bb8a3ce']
2020-08-01 22:19:09,666 - FUNCflow - INFO - Getting flows from Mininet
2020-08-01 22:19:09,666 - FUNCflow - INFO - Sending: sh ovs-ofctl dump-flows s1 -O OpenFlow13
2020-08-01 22:19:09,776 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:19:09,777 - FUNCflow - INFO - All flows are in mininet
2020-08-01 22:19:09,777 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:19:09.778249] [FUNCflow] [STEP]  1700.4: Send a packet to verify the flow is correct
2020-08-01 22:19:09,779 - FUNCflow - INFO - Constructing packet
[95m2020-08-01 22:19:09,779 - FUNCflow - DEBUG - h1: Building Ethernet Frame[0m
[95m2020-08-01 22:19:09,984 - FUNCflow - DEBUG - h1: Building IP Frame[0m
[95m2020-08-01 22:19:10,190 - FUNCflow - DEBUG - h1: Building TCP[0m
2020-08-01 22:19:10,395 - FUNCflow - INFO - Starting filter on host2
2020-08-01 22:19:10,396 - FUNCflow - INFO - h2: Starting filter on interface None
2020-08-01 22:19:10,498 - FUNCflow - INFO - h2: Starting filter on h2 > pkts = sniff(count = 1, filter = "tcp", prn=lambda p: p.summary() )
2020-08-01 22:19:14,604 - FUNCflow - INFO - Sending packet to host2
[95m2020-08-01 22:19:14,605 - FUNCflow - DEBUG - h1: Sending Packet[0m
[95m2020-08-01 22:19:15,843 - FUNCflow - DEBUG - h1: Send packet response:  sendp( packet, return_packets=True).summary()
.
Sent 1 packets.
Ether / IP / TCP 10.0.0.1:ftp_data > 10.0.0.2:40001 S
[0m
2020-08-01 22:19:15,843 - FUNCflow - INFO - Checking filter for our packet
[95m2020-08-01 22:19:15,844 - FUNCflow - DEBUG - h2: Checking Filter[0m
[95m2020-08-01 22:19:15,945 - FUNCflow - DEBUG - h2: cleanOutput:[0m
[95m2020-08-01 22:19:15,945 - FUNCflow - DEBUG - h2: ' pkts = sniff(count = 1, filter = "tcp", prn=lambda p: p.summary() )\r\nEther / IP / TCP 10.0.0.1:ftp_data > 10.0.0.2:40001 S\r\n>>>'[0m
[95m2020-08-01 22:19:15,945 - FUNCflow - DEBUG - h2: Reading Packets[0m
[95m2020-08-01 22:19:15,945 - FUNCflow - DEBUG - h2: Begin clear buffer[0m
[95m2020-08-01 22:19:16,948 - FUNCflow - DEBUG - h2: end clear buffer[0m
2020-08-01 22:19:18,053 - FUNCflow - INFO - Packet:  pkts.summary()
Ether / IP / TCP 10.0.0.1:ftp_data > 10.0.0.2:40001 S

2020-08-01 22:19:18,053 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:19:18,054 - FUNCflow - INFO - Successfully sent a packet
2020-08-01 22:19:18,054 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase3000
******************************

[95m2020-08-01 22:19:18,056 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000][0m
[95m2020-08-01 22:19:18,057 - FUNCflow - DEBUG - Case to be executed : [1800, 3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:19:18.057353] [FUNCflow] [CASE]  Delete flows that were added through rest
[2020-08-01 22:19:18.059184] [FUNCflow] [STEP]  3000.1: Deleting flows
2020-08-01 22:19:18,060 - FUNCflow - INFO - Getting flows
[93m2020-08-01 22:19:18,060 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:19:18,060 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:19:18,060 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:19:18,060 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
[95m2020-08-01 22:19:18,080 - FUNCflow - DEBUG - Flow to be deleted:
{
    "appId": "org.onosproject.rest",
    "bytes": 0,
    "deviceId": "of:0000000000000001",
    "groupId": 0,
    "id": "54043197604144078",
    "isPermanent": true,
    "lastSeen": 1596320354693,
    "life": 15,
    "liveType": "UNKNOWN",
    "packets": 0,
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "0x800",
                "type": "ETH_TYPE"
            },
            {
                "protocol": 6,
                "type": "IP_PROTO"
            },
            {
                "tcpPort": 40001,
                "type": "TCP_DST"
            }
        ]
    },
    "state": "ADDED",
    "tableId": 0,
    "tableName": "0",
    "timeout": 0,
    "treatment": {
        "deferred": [],
        "instructions": [
            {
                "port": "2",
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:19:18,081 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:19:18,081 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:19:18,081 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:19:18,081 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001/54043197604144078 using DELETE method.
2020-08-01 22:19:18,093 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:19:18,094 - FUNCflow - INFO - Successfully deleting flows
2020-08-01 22:19:18,094 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase1800
******************************

[95m2020-08-01 22:19:28,107 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800][0m
[95m2020-08-01 22:19:28,107 - FUNCflow - DEBUG - Case to be executed : [3000, 1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:19:28.107769] [FUNCflow] [CASE]  Verify the UDP selector is correctly compiled on the flow
[2020-08-01 22:19:28.109671] [FUNCflow] [STEP]  1800.1: Add a flow with a SCTP selector
[95m2020-08-01 22:19:28,111 - FUNCflow - DEBUG - h1: Stopping scapy[0m
[95m2020-08-01 22:19:28,240 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:19:30,272 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:19:30,272 - FUNCflow - DEBUG - 10.0.0.1[0m
[95m2020-08-01 22:19:30,273 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:19:30,273 - FUNCflow - DEBUG - h2: Stopping scapy[0m
[95m2020-08-01 22:19:30,409 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:19:32,614 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:19:32,615 - FUNCflow - DEBUG - 10.0.0.2[0m
[95m2020-08-01 22:19:32,615 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:19:32,615 - FUNCflow - DEBUG - h3: Stopping scapy[0m
[95m2020-08-01 22:19:32,761 - FUNCflow - DEBUG - h3: Starting scapy[0m
[93m2020-08-01 22:19:34,873 - FUNCflow - WARNING - iface h3-eth0 has no IPv4 address[0m
[95m2020-08-01 22:19:34,873 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:19:34,874 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:19:34,874 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:19:34,874 - FUNCflow - DEBUG - h4: Stopping scapy[0m
[95m2020-08-01 22:19:35,013 - FUNCflow - DEBUG - h4: Starting scapy[0m
[93m2020-08-01 22:19:37,063 - FUNCflow - WARNING - iface h4-eth0 has no IPv4 address[0m
[95m2020-08-01 22:19:37,063 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:19:37,063 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:19:37,063 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:19:37,063 - FUNCflow - DEBUG - h5: Stopping scapy[0m
[95m2020-08-01 22:19:37,204 - FUNCflow - DEBUG - h5: Starting scapy[0m
[93m2020-08-01 22:19:39,340 - FUNCflow - WARNING - iface h5-eth0 has no IPv4 address[0m
[95m2020-08-01 22:19:39,341 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:19:39,341 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:19:39,341 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:19:39,341 - FUNCflow - DEBUG - h6: Stopping scapy[0m
[95m2020-08-01 22:19:39,475 - FUNCflow - DEBUG - h6: Starting scapy[0m
[93m2020-08-01 22:19:41,661 - FUNCflow - WARNING - iface h6-eth0 has no IPv4 address[0m
[95m2020-08-01 22:19:41,661 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:19:41,661 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:19:41,662 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
2020-08-01 22:19:41,662 - FUNCflow - INFO - Add a flow that connects host1 on port1 to host2 on port2
[95m2020-08-01 22:19:41,662 - FUNCflow - DEBUG - Adding flow: {
    "deviceId": "of:0000000000000001",
    "isPermanent": "true",
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "2048",
                "type": "ETH_TYPE"
            },
            {
                "protocol": "132",
                "type": "IP_PROTO"
            }
        ]
    },
    "timeout": 0,
    "treatment": {
        "instructions": [
            {
                "port": 2,
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:19:41,663 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:19:41,663 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:19:41,663 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:19:41,663 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001 using POST method.
2020-08-01 22:19:41,686 - FUNCflow - INFO - ONOSrest1: Successfully POST flowin device: of:0000000000000001
2020-08-01 22:19:41,687 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:19:41,687 - FUNCflow - INFO - Successfully added flows
2020-08-01 22:19:41,687 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:19:51.698581] [FUNCflow] [STEP]  1800.2: Check flow is in the ADDED state
2020-08-01 22:19:51,699 - FUNCflow - INFO - Get the flows from ONOS
[93m2020-08-01 22:19:51,699 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:19:51,700 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:19:51,700 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:19:51,700 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
2020-08-01 22:19:51,718 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:19:51,719 - FUNCflow - INFO - All flows are in the ADDED state
2020-08-01 22:19:51,719 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:19:51.719553] [FUNCflow] [STEP]  1800.3: Check flows are in Mininet's flow table
2020-08-01 22:19:51,720 - FUNCflow - INFO - Getting the flow IDs from ONOS
2020-08-01 22:19:51,720 - FUNCflow - INFO - ONOS flow IDs: ['0xc0000035f18cbb']
2020-08-01 22:19:51,720 - FUNCflow - INFO - Getting flows from Mininet
2020-08-01 22:19:51,720 - FUNCflow - INFO - Sending: sh ovs-ofctl dump-flows s1 -O OpenFlow13
2020-08-01 22:19:51,831 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:19:51,832 - FUNCflow - INFO - All flows are in mininet
2020-08-01 22:19:51,832 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:19:51.832918] [FUNCflow] [STEP]  1800.4: Send a packet to verify the flow is correct
2020-08-01 22:19:51,833 - FUNCflow - INFO - Constructing packet
[95m2020-08-01 22:19:51,834 - FUNCflow - DEBUG - h1: Building Ethernet Frame[0m
[95m2020-08-01 22:19:52,039 - FUNCflow - DEBUG - h1: Building IP Frame[0m
[95m2020-08-01 22:19:52,244 - FUNCflow - DEBUG - h1: Building SCTP Frame[0m
2020-08-01 22:19:52,449 - FUNCflow - INFO - Starting filter on host2
2020-08-01 22:19:52,449 - FUNCflow - INFO - h2: Starting filter on interface None
2020-08-01 22:19:52,551 - FUNCflow - INFO - h2: Starting filter on h2 > pkts = sniff(count = 1, filter = "sctp", prn=lambda p: p.summary() )
2020-08-01 22:19:56,657 - FUNCflow - INFO - Sending packet to host2
[95m2020-08-01 22:19:56,657 - FUNCflow - DEBUG - h1: Sending Packet[0m
[95m2020-08-01 22:19:57,907 - FUNCflow - DEBUG - h1: Send packet response:  sendp( packet, return_packets=True).summary()
.
Sent 1 packets.
Ether / 10.0.0.1 > 10.0.0.2 sctp / SCTP
[0m
2020-08-01 22:19:57,907 - FUNCflow - INFO - Checking filter for our packet
[95m2020-08-01 22:19:57,907 - FUNCflow - DEBUG - h2: Checking Filter[0m
[95m2020-08-01 22:19:58,008 - FUNCflow - DEBUG - h2: cleanOutput:[0m
[95m2020-08-01 22:19:58,008 - FUNCflow - DEBUG - h2: ' pkts = sniff(count = 1, filter = "sctp", prn=lambda p: p.summary() )\r\nEther / 10.0.0.1 > 10.0.0.2 sctp / SCTP\r\n>>>'[0m
[95m2020-08-01 22:19:58,009 - FUNCflow - DEBUG - h2: Reading Packets[0m
[95m2020-08-01 22:19:58,009 - FUNCflow - DEBUG - h2: Begin clear buffer[0m
[95m2020-08-01 22:19:59,011 - FUNCflow - DEBUG - h2: end clear buffer[0m
2020-08-01 22:20:00,116 - FUNCflow - INFO - Packet:  pkts.summary()
Ether / 10.0.0.1 > 10.0.0.2 sctp / SCTP

2020-08-01 22:20:00,117 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:20:00,118 - FUNCflow - INFO - Successfully sent a packet
2020-08-01 22:20:00,118 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase3000
******************************

[95m2020-08-01 22:20:00,122 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000][0m
[95m2020-08-01 22:20:00,122 - FUNCflow - DEBUG - Case to be executed : [1900, 3000, 2000, 12, 100][0m
[2020-08-01 22:20:00.123311] [FUNCflow] [CASE]  Delete flows that were added through rest
[2020-08-01 22:20:00.125339] [FUNCflow] [STEP]  3000.1: Deleting flows
2020-08-01 22:20:00,126 - FUNCflow - INFO - Getting flows
[93m2020-08-01 22:20:00,126 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:20:00,126 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:20:00,126 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:20:00,127 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
[95m2020-08-01 22:20:00,147 - FUNCflow - DEBUG - Flow to be deleted:
{
    "appId": "org.onosproject.rest",
    "bytes": 46,
    "deviceId": "of:0000000000000001",
    "groupId": 0,
    "id": "54043196433468603",
    "isPermanent": true,
    "lastSeen": 1596320399694,
    "life": 17,
    "liveType": "UNKNOWN",
    "packets": 1,
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "0x800",
                "type": "ETH_TYPE"
            },
            {
                "protocol": 132,
                "type": "IP_PROTO"
            }
        ]
    },
    "state": "ADDED",
    "tableId": 0,
    "tableName": "0",
    "timeout": 0,
    "treatment": {
        "deferred": [],
        "instructions": [
            {
                "port": "2",
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:20:00,150 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:20:00,151 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:20:00,151 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:20:00,151 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001/54043196433468603 using DELETE method.
2020-08-01 22:20:00,162 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:20:00,162 - FUNCflow - INFO - Successfully deleting flows
2020-08-01 22:20:00,162 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase1900
******************************

[95m2020-08-01 22:20:10,175 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900][0m
[95m2020-08-01 22:20:10,175 - FUNCflow - DEBUG - Case to be executed : [3000, 2000, 12, 100][0m
[2020-08-01 22:20:10.175955] [FUNCflow] [CASE]  Verify the ICMPv4 selector is correctly compiled on the flow
[2020-08-01 22:20:10.177379] [FUNCflow] [STEP]  1900.1: Add a flow with a ICMPv4 selector
[95m2020-08-01 22:20:10,178 - FUNCflow - DEBUG - h1: Stopping scapy[0m
[95m2020-08-01 22:20:10,328 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:20:12,490 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:20:12,490 - FUNCflow - DEBUG - 10.0.0.1[0m
[95m2020-08-01 22:20:12,490 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:20:12,490 - FUNCflow - DEBUG - h2: Stopping scapy[0m
[95m2020-08-01 22:20:12,635 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:20:14,708 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:20:14,708 - FUNCflow - DEBUG - 10.0.0.2[0m
[95m2020-08-01 22:20:14,708 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:20:14,708 - FUNCflow - DEBUG - h3: Stopping scapy[0m
[95m2020-08-01 22:20:14,847 - FUNCflow - DEBUG - h3: Starting scapy[0m
[93m2020-08-01 22:20:17,024 - FUNCflow - WARNING - iface h3-eth0 has no IPv4 address[0m
[95m2020-08-01 22:20:17,024 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:20:17,024 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:20:17,024 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:20:17,024 - FUNCflow - DEBUG - h4: Stopping scapy[0m
[95m2020-08-01 22:20:17,164 - FUNCflow - DEBUG - h4: Starting scapy[0m
[93m2020-08-01 22:20:19,247 - FUNCflow - WARNING - iface h4-eth0 has no IPv4 address[0m
[95m2020-08-01 22:20:19,248 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:20:19,248 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:20:19,248 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:20:19,248 - FUNCflow - DEBUG - h5: Stopping scapy[0m
[95m2020-08-01 22:20:19,385 - FUNCflow - DEBUG - h5: Starting scapy[0m
[93m2020-08-01 22:20:21,557 - FUNCflow - WARNING - iface h5-eth0 has no IPv4 address[0m
[95m2020-08-01 22:20:21,557 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:20:21,557 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:20:21,557 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:20:21,558 - FUNCflow - DEBUG - h6: Stopping scapy[0m
[95m2020-08-01 22:20:21,698 - FUNCflow - DEBUG - h6: Starting scapy[0m
[93m2020-08-01 22:20:23,879 - FUNCflow - WARNING - iface h6-eth0 has no IPv4 address[0m
[95m2020-08-01 22:20:23,880 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:20:23,880 - FUNCflow - DEBUG - 0.0.0.0[0m
[95m2020-08-01 22:20:23,881 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
2020-08-01 22:20:23,881 - FUNCflow - INFO - Add a flow that connects host1 on port1 to host2 on port2
[95m2020-08-01 22:20:23,882 - FUNCflow - DEBUG - Adding flow: {
    "deviceId": "of:0000000000000001",
    "isPermanent": "true",
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "2048",
                "type": "ETH_TYPE"
            },
            {
                "protocol": "1",
                "type": "IP_PROTO"
            }
        ]
    },
    "timeout": 0,
    "treatment": {
        "instructions": [
            {
                "port": 2,
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:20:23,885 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:20:23,885 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:20:23,885 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:20:23,886 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001 using POST method.
2020-08-01 22:20:23,904 - FUNCflow - INFO - ONOSrest1: Successfully POST flowin device: of:0000000000000001
2020-08-01 22:20:23,904 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:20:23,905 - FUNCflow - INFO - Successfully added flows
2020-08-01 22:20:23,905 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:20:33.916113] [FUNCflow] [STEP]  1900.2: Check flow is in the ADDED state
2020-08-01 22:20:33,918 - FUNCflow - INFO - Get the flows from ONOS
[93m2020-08-01 22:20:33,918 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:20:33,919 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:20:33,919 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:20:33,919 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
2020-08-01 22:20:33,938 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:20:33,938 - FUNCflow - INFO - All flows are in the ADDED state
2020-08-01 22:20:33,938 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:20:33.939280] [FUNCflow] [STEP]  1900.3: Check flows are in Mininet's flow table
2020-08-01 22:20:33,940 - FUNCflow - INFO - Getting the flow IDs from ONOS
2020-08-01 22:20:33,941 - FUNCflow - INFO - ONOS flow IDs: ['0xc00000077a075c']
2020-08-01 22:20:33,941 - FUNCflow - INFO - Getting flows from Mininet
2020-08-01 22:20:33,941 - FUNCflow - INFO - Sending: sh ovs-ofctl dump-flows s1 -O OpenFlow13
2020-08-01 22:20:34,051 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:20:34,051 - FUNCflow - INFO - All flows are in mininet
2020-08-01 22:20:34,052 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:20:34.053194] [FUNCflow] [STEP]  1900.4: Send a packet to verify the flow is correct
2020-08-01 22:20:34,054 - FUNCflow - INFO - Constructing packet
[95m2020-08-01 22:20:34,055 - FUNCflow - DEBUG - h1: Building Ethernet Frame[0m
[95m2020-08-01 22:20:34,259 - FUNCflow - DEBUG - h1: Building IP Frame[0m
[95m2020-08-01 22:20:34,464 - FUNCflow - DEBUG - h1: Building ICMP Frame[0m
2020-08-01 22:20:34,676 - FUNCflow - INFO - Starting filter on host2
2020-08-01 22:20:34,676 - FUNCflow - INFO - h2: Starting filter on interface None
2020-08-01 22:20:34,779 - FUNCflow - INFO - h2: Starting filter on h2 > pkts = sniff(count = 1, filter = "icmp", prn=lambda p: p.summary() )
2020-08-01 22:20:38,887 - FUNCflow - INFO - Sending packet to host2
[95m2020-08-01 22:20:38,888 - FUNCflow - DEBUG - h1: Sending Packet[0m
[95m2020-08-01 22:20:40,135 - FUNCflow - DEBUG - h1: Send packet response:  sendp( packet, return_packets=True).summary()
.
Sent 1 packets.
Ether / IP / ICMP 10.0.0.1 > 10.0.0.2 echo-request 0
[0m
2020-08-01 22:20:40,136 - FUNCflow - INFO - Checking filter for our packet
[95m2020-08-01 22:20:40,137 - FUNCflow - DEBUG - h2: Checking Filter[0m
[95m2020-08-01 22:20:40,238 - FUNCflow - DEBUG - h2: cleanOutput:[0m
[95m2020-08-01 22:20:40,238 - FUNCflow - DEBUG - h2: ' pkts = sniff(count = 1, filter = "icmp", prn=lambda p: p.summary() )\r\nEther / IP / ICMP 10.0.0.1 > 10.0.0.2 echo-request 0\r\n>>>'[0m
[95m2020-08-01 22:20:40,239 - FUNCflow - DEBUG - h2: Reading Packets[0m
[95m2020-08-01 22:20:40,239 - FUNCflow - DEBUG - h2: Begin clear buffer[0m
[95m2020-08-01 22:20:41,242 - FUNCflow - DEBUG - h2: end clear buffer[0m
2020-08-01 22:20:42,346 - FUNCflow - INFO - Packet:  pkts.summary()
Ether / IP / ICMP 10.0.0.1 > 10.0.0.2 echo-request 0

2020-08-01 22:20:42,347 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:20:42,348 - FUNCflow - INFO - Successfully sent a packet
2020-08-01 22:20:42,348 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase3000
******************************

[95m2020-08-01 22:20:42,352 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000][0m
[95m2020-08-01 22:20:42,352 - FUNCflow - DEBUG - Case to be executed : [2000, 12, 100][0m
[2020-08-01 22:20:42.352798] [FUNCflow] [CASE]  Delete flows that were added through rest
[2020-08-01 22:20:42.354865] [FUNCflow] [STEP]  3000.1: Deleting flows
2020-08-01 22:20:42,356 - FUNCflow - INFO - Getting flows
[93m2020-08-01 22:20:42,356 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:20:42,356 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:20:42,357 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:20:42,357 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
[95m2020-08-01 22:20:42,376 - FUNCflow - DEBUG - Flow to be deleted:
{
    "appId": "org.onosproject.rest",
    "bytes": 0,
    "deviceId": "of:0000000000000001",
    "groupId": 0,
    "id": "54043195653883740",
    "isPermanent": true,
    "lastSeen": 1596320439693,
    "life": 15,
    "liveType": "UNKNOWN",
    "packets": 0,
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 1,
                "type": "IN_PORT"
            },
            {
                "ethType": "0x800",
                "type": "ETH_TYPE"
            },
            {
                "protocol": 1,
                "type": "IP_PROTO"
            }
        ]
    },
    "state": "ADDED",
    "tableId": 0,
    "tableName": "0",
    "timeout": 0,
    "treatment": {
        "deferred": [],
        "instructions": [
            {
                "port": "2",
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:20:42,379 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:20:42,379 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:20:42,379 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:20:42,379 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001/54043195653883740 using DELETE method.
2020-08-01 22:20:42,389 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:20:42,390 - FUNCflow - INFO - Successfully deleting flows
2020-08-01 22:20:42,390 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase2000
******************************

[95m2020-08-01 22:20:52,405 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000][0m
[95m2020-08-01 22:20:52,405 - FUNCflow - DEBUG - Case to be executed : [12, 100][0m
[2020-08-01 22:20:52.405953] [FUNCflow] [CASE]  Verify the ICMPv6 selector is correctly compiled on the flow
[2020-08-01 22:20:52.407996] [FUNCflow] [STEP]  2000.1: Add a flow with a ICMPv6 selector
[95m2020-08-01 22:20:52,409 - FUNCflow - DEBUG - h1: Stopping scapy[0m
[95m2020-08-01 22:20:52,552 - FUNCflow - DEBUG - h1: Starting scapy[0m
[95m2020-08-01 22:20:54,736 - FUNCflow - DEBUG - h1[0m
[95m2020-08-01 22:20:54,737 - FUNCflow - DEBUG - ::[0m
[95m2020-08-01 22:20:54,737 - FUNCflow - DEBUG - 00:00:00:00:00:01[0m
[95m2020-08-01 22:20:54,737 - FUNCflow - DEBUG - h2: Stopping scapy[0m
[95m2020-08-01 22:20:54,883 - FUNCflow - DEBUG - h2: Starting scapy[0m
[95m2020-08-01 22:20:57,078 - FUNCflow - DEBUG - h2[0m
[95m2020-08-01 22:20:57,078 - FUNCflow - DEBUG - ::[0m
[95m2020-08-01 22:20:57,079 - FUNCflow - DEBUG - 00:00:00:00:00:02[0m
[95m2020-08-01 22:20:57,079 - FUNCflow - DEBUG - h3: Stopping scapy[0m
[95m2020-08-01 22:20:57,217 - FUNCflow - DEBUG - h3: Starting scapy[0m
[95m2020-08-01 22:20:59,332 - FUNCflow - DEBUG - h3[0m
[95m2020-08-01 22:20:59,333 - FUNCflow - DEBUG - ::[0m
[95m2020-08-01 22:20:59,333 - FUNCflow - DEBUG - 00:00:00:00:00:03[0m
[95m2020-08-01 22:20:59,333 - FUNCflow - DEBUG - h4: Stopping scapy[0m
[95m2020-08-01 22:20:59,470 - FUNCflow - DEBUG - h4: Starting scapy[0m
[95m2020-08-01 22:21:01,581 - FUNCflow - DEBUG - h4[0m
[95m2020-08-01 22:21:01,581 - FUNCflow - DEBUG - ::[0m
[95m2020-08-01 22:21:01,582 - FUNCflow - DEBUG - 00:00:00:00:00:04[0m
[95m2020-08-01 22:21:01,582 - FUNCflow - DEBUG - h5: Stopping scapy[0m
[95m2020-08-01 22:21:01,720 - FUNCflow - DEBUG - h5: Starting scapy[0m
[95m2020-08-01 22:21:03,835 - FUNCflow - DEBUG - h5[0m
[95m2020-08-01 22:21:03,836 - FUNCflow - DEBUG - 1000:0000:0000:0000:0000:0000:0000:0005[0m
[95m2020-08-01 22:21:03,836 - FUNCflow - DEBUG - 00:00:00:00:00:05[0m
[95m2020-08-01 22:21:03,836 - FUNCflow - DEBUG - h6: Stopping scapy[0m
[95m2020-08-01 22:21:03,973 - FUNCflow - DEBUG - h6: Starting scapy[0m
[95m2020-08-01 22:21:06,165 - FUNCflow - DEBUG - h6[0m
[95m2020-08-01 22:21:06,165 - FUNCflow - DEBUG - 1000:0000:0000:0000:0000:0000:0000:0006[0m
[95m2020-08-01 22:21:06,166 - FUNCflow - DEBUG - 00:00:00:00:00:06[0m
2020-08-01 22:21:06,166 - FUNCflow - INFO - Add a flow that connects host1 on port1 to host2 on port2
[95m2020-08-01 22:21:06,167 - FUNCflow - DEBUG - Adding flow: {
    "deviceId": "of:0000000000000001",
    "isPermanent": "true",
    "priority": 100,
    "selector": {
        "criteria": [
            {
                "port": 5,
                "type": "IN_PORT"
            },
            {
                "ethType": "34525",
                "type": "ETH_TYPE"
            },
            {
                "protocol": "58",
                "type": "IP_PROTO"
            }
        ]
    },
    "timeout": 0,
    "treatment": {
        "instructions": [
            {
                "port": 6,
                "type": "OUTPUT"
            }
        ]
    }
}[0m
[93m2020-08-01 22:21:06,170 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:21:06,170 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:21:06,170 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:21:06,171 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows/of:0000000000000001 using POST method.
2020-08-01 22:21:06,190 - FUNCflow - INFO - ONOSrest1: Successfully POST flowin device: of:0000000000000001
2020-08-01 22:21:06,190 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:21:06,191 - FUNCflow - INFO - Successfully added flows
2020-08-01 22:21:06,191 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:21:16.202174] [FUNCflow] [STEP]  2000.2: Check flow is in the ADDED state
2020-08-01 22:21:16,204 - FUNCflow - INFO - Get the flows from ONOS
[93m2020-08-01 22:21:16,204 - FUNCflow - WARNING - No ip given, reverting to ip from topo file[0m
[93m2020-08-01 22:21:16,204 - FUNCflow - WARNING - No port given, reverting to port from topo file[0m
2020-08-01 22:21:16,205 - FUNCflow - INFO - user/passwd is: onos/rocks
2020-08-01 22:21:16,205 - FUNCflow - INFO - Sending request http://192.168.171.28:8181/onos/v1/flows using GET method.
2020-08-01 22:21:16,223 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:21:16,223 - FUNCflow - INFO - All flows are in the ADDED state
2020-08-01 22:21:16,224 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:21:16.224536] [FUNCflow] [STEP]  2000.3: Check flows are in Mininet's flow table
2020-08-01 22:21:16,225 - FUNCflow - INFO - Getting the flow IDs from ONOS
2020-08-01 22:21:16,226 - FUNCflow - INFO - ONOS flow IDs: ['0xc00000eaf2d629']
2020-08-01 22:21:16,226 - FUNCflow - INFO - Getting flows from Mininet
2020-08-01 22:21:16,226 - FUNCflow - INFO - Sending: sh ovs-ofctl dump-flows s1 -O OpenFlow13
2020-08-01 22:21:16,336 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:21:16,337 - FUNCflow - INFO - All flows are in mininet
2020-08-01 22:21:16,337 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:21:16.338297] [FUNCflow] [STEP]  2000.4: Send a packet to verify the flow is correct
2020-08-01 22:21:16,339 - FUNCflow - INFO - Constructing packet
[95m2020-08-01 22:21:16,340 - FUNCflow - DEBUG - h5: Building Ethernet Frame[0m
[95m2020-08-01 22:21:16,545 - FUNCflow - DEBUG - h5: Building IPv6 Frame[0m
[95m2020-08-01 22:21:16,750 - FUNCflow - DEBUG - h5: Building ICMP Frame[0m
2020-08-01 22:21:16,956 - FUNCflow - INFO - Starting filter on host2
2020-08-01 22:21:16,956 - FUNCflow - INFO - h6: Starting filter on interface None
2020-08-01 22:21:17,059 - FUNCflow - INFO - h6: Starting filter on h6 > pkts = sniff(count = 1, filter = "icmp6", prn=lambda p: p.summary() )
2020-08-01 22:21:21,165 - FUNCflow - INFO - Sending packet to host2
[95m2020-08-01 22:21:21,166 - FUNCflow - DEBUG - h5: Sending Packet[0m
[95m2020-08-01 22:21:22,419 - FUNCflow - DEBUG - h5: Send packet response:  sendp( packet, return_packets=True).summary()
WARNING: No route found for IPv6 destination 1000::6 (no default route?)
WARNING: No route found for IPv6 destination 1000::6 (no default route?)
WARNING: more No route found for IPv6 destination 1000::6 (no default route?)
.
Sent 1 packets.
Ether / IPv6 / ICMPv6 Echo Reply (id: 0x0 seq: 0x0)
[0m
2020-08-01 22:21:22,421 - FUNCflow - INFO - Checking filter for our packet
[95m2020-08-01 22:21:22,421 - FUNCflow - DEBUG - h6: Checking Filter[0m
[95m2020-08-01 22:21:22,522 - FUNCflow - DEBUG - h6: cleanOutput:[0m
[95m2020-08-01 22:21:22,523 - FUNCflow - DEBUG - h6: ' pkts = sniff(count = 1, filter = "icmp6", prn=lambda p: p.summary() )\r\nEther / IPv6 / ICMPv6 Echo Reply (id: 0x0 seq: 0x0)\r\n>>>'[0m
[95m2020-08-01 22:21:22,523 - FUNCflow - DEBUG - h6: Reading Packets[0m
[95m2020-08-01 22:21:22,524 - FUNCflow - DEBUG - h6: Begin clear buffer[0m
[95m2020-08-01 22:21:23,526 - FUNCflow - DEBUG - h6: end clear buffer[0m
2020-08-01 22:21:24,630 - FUNCflow - INFO - Packet:  pkts.summary()
Ether / IPv6 / ICMPv6 Echo Reply (id: 0x0 seq: 0x0)

2020-08-01 22:21:24,631 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:21:24,631 - FUNCflow - INFO - Successfully sent a packet
2020-08-01 22:21:24,631 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase12
******************************

[95m2020-08-01 22:21:24,633 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12][0m
[95m2020-08-01 22:21:24,634 - FUNCflow - DEBUG - Case to be executed : [100][0m

[REPORT] [01 Aug 2020 22:21:24] Stop Mininet and Scapy
[2020-08-01 22:21:24.635058] [FUNCflow] [CASE]  Stop Mininet and Scapy
[2020-08-01 22:21:24.636247] [FUNCflow] [STEP]  12.1: Stopping and Removing Scapy Host Components
[95m2020-08-01 22:21:24,637 - FUNCflow - DEBUG - h1: Stopping scapy[0m
2020-08-01 22:21:24,774 - FUNCflow - INFO - Stopped Scapy Host: h1
[95m2020-08-01 22:21:24,775 - FUNCflow - DEBUG - h2: Stopping scapy[0m
2020-08-01 22:21:24,914 - FUNCflow - INFO - Stopped Scapy Host: h2
[95m2020-08-01 22:21:24,915 - FUNCflow - DEBUG - h3: Stopping scapy[0m
2020-08-01 22:21:25,041 - FUNCflow - INFO - Stopped Scapy Host: h3
[95m2020-08-01 22:21:25,042 - FUNCflow - DEBUG - h4: Stopping scapy[0m
2020-08-01 22:21:25,186 - FUNCflow - INFO - Stopped Scapy Host: h4
[95m2020-08-01 22:21:25,186 - FUNCflow - DEBUG - h5: Stopping scapy[0m
2020-08-01 22:21:25,327 - FUNCflow - INFO - Stopped Scapy Host: h5
[95m2020-08-01 22:21:25,328 - FUNCflow - DEBUG - h6: Stopping scapy[0m
2020-08-01 22:21:25,475 - FUNCflow - INFO - Stopped Scapy Host: h6
2020-08-01 22:21:27,681 - FUNCflow - INFO - Removed Scapy Host Component: h1
2020-08-01 22:21:29,886 - FUNCflow - INFO - Removed Scapy Host Component: h2
2020-08-01 22:21:32,092 - FUNCflow - INFO - Removed Scapy Host Component: h3
2020-08-01 22:21:34,298 - FUNCflow - INFO - Removed Scapy Host Component: h4
2020-08-01 22:21:36,503 - FUNCflow - INFO - Removed Scapy Host Component: h5
2020-08-01 22:21:38,709 - FUNCflow - INFO - Removed Scapy Host Component: h6
2020-08-01 22:21:40,723 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:21:40,723 - FUNCflow - INFO - Successfully stopped scapy and removed host components
2020-08-01 22:21:40,724 - FUNCflow - INFO - Assertion Passed
[2020-08-01 22:21:40.724670] [FUNCflow] [STEP]  12.2: Stopping Mininet
2020-08-01 22:21:40,725 - FUNCflow - INFO - Mininet1: Stopping mininet...
2020-08-01 22:21:40,828 - FUNCflow - INFO - Exiting mininet..
2020-08-01 22:21:40,929 - FUNCflow - INFO - Mininet1: Stopped
Time Took : 0.100701093674
2020-08-01 22:21:42,451 - FUNCflow - INFO - Verifying the Expected is equal to the actual or not using assert_equal
2020-08-01 22:21:42,451 - FUNCflow - INFO - Successfully stopped mininet
2020-08-01 22:21:42,452 - FUNCflow - INFO - Assertion Passed

*****************************
 Result: Pass 
*****************************


******************************
 Result summary for Testcase100
******************************

[95m2020-08-01 22:21:42,455 - FUNCflow - DEBUG - Case Executed       : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100][0m
[95m2020-08-01 22:21:42,455 - FUNCflow - DEBUG - Case to be executed : [][0m
2020-08-01 22:21:42,456 - FUNCflow - INFO - Error report: 

2020-08-01 22:21:42,456 - FUNCflow - INFO - =================== Log Report for 192.168.171.28 ====================
2020-08-01 22:21:43,495 - FUNCflow - INFO - INFO: 1380
2020-08-01 22:21:44,308 - FUNCflow - INFO - FOLLOWER: 0
2020-08-01 22:21:45,195 - FUNCflow - INFO - WARN: 11
2020-08-01 22:21:46,033 - FUNCflow - INFO - flow: 103
2020-08-01 22:21:46,864 - FUNCflow - INFO - ERROR: 0
2020-08-01 22:21:47,733 - FUNCflow - INFO - Except: 0


2020-08-01 22:21:47,734 - FUNCflow - INFO - ======================================================================

*****************************
 Result: Pass 
*****************************



*************************************
	Test Execution Summary

************************************* 

 Test Start           : 01 Aug 2020 22:10:35
 Test End             : 01 Aug 2020 22:21:47
 Execution Time       : 0:11:12.732483
 Total Tests Planned  : 27
 Total Tests Run      : 27
 Total Pass           : 26
 Total Fail           : 1
 Total No Result      : 0
 Success Percentage   : 96%
 Execution Percentage : 100%

 Case Failed          : [1200]
 Case Executed        : [1, 2, 10, 11, 1000, 3000, 1100, 3000, 1200, 3000, 1300, 3000, 1400, 3000, 1500, 3000, 1600, 3000, 1700, 3000, 1800, 3000, 1900, 3000, 2000, 12, 100]
 Case Not Executed    : []
Disconnecting from Scapy: <class 'drivers.common.cli.emulator.mininetscapyclidriver.MininetScapyCliDriver'>
Disconnecting from Mininet1: <class 'drivers.common.cli.emulator.mininetclidriver.MininetCliDriver'>
Disconnecting from ONOSserver1: <class 'drivers.common.cli.onosdriver.OnosDriver'>
Disconnecting from ONOSrest1: <class 'drivers.common.api.controller.onosrestdriver.OnosRestDriver'>
Disconnecting from ONOSbench1: <class 'drivers.common.cli.onosdriver.OnosDriver'>
Disconnecting from ONOScli1: <class 'drivers.common.cli.onosclidriver.OnosCliDriver'>
Disconnecting from ONOScell: <class 'drivers.common.cli.onosclusterdriver.OnosClusterDriver'>
ubuntu@manage:~/OnosSystemTest/TestON/bin$ 
ubuntu@manage:~/OnosSystemTest/TestON/bin$ exit
logout
